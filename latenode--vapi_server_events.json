{
  "id": "6837b003ddbd2cd569415676",
  "folderId": "6832329bee92a3567bbb30f3",
  "title": "Server events",
  "description": "Handles call control and variables for inbound calls",
  "nodes": [
    {
      "id": "6837b01955973d8d653ac306",
      "title": "",
      "description": "",
      "localId": "1",
      "typeId": "62cc22317ae28c026d25692d",
      "params": [
        {
          "key": "path",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "a600eed6-88cd-47dc-be9f-7b9eef56fce3",
            "text": "a600eed6-88cd-47dc-be9f-7b9eef56fce3",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 0,
        "y": 62
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "6837b01955973d8d653ac307",
      "title": "",
      "description": "",
      "localId": "2",
      "typeId": "62cc22317ae28c026d25692e",
      "params": [
        {
          "key": "status",
          "type": "int",
          "value": {
            "stringToString": [],
            "int": "200",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "headers",
          "type": "string_to_string",
          "value": {
            "stringToString": [
              {
                "key": "content-type",
                "value": "application/json"
              }
            ],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "body",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": -13,
        "y": 263
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "68387bcba68f16d255ebef99",
      "title": "Return squad and personalized message",
      "description": "",
      "localId": "3",
      "typeId": "62cc22317ae28c026d256930",
      "params": [
        {
          "key": "customerName",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "{{8.result.[0].value.first_name}}",
            "text": "{{8.result.[0].value.first_name}}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "preferredAgent",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "{{8.result.[0].value.preferred_agent}}",
            "text": "{{8.result.[0].value.preferred_agent}}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "customer",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "{{8.result.[0].value}}",
            "text": "{{8.result.[0].value}}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "code",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "/** @CustomParams\n{\n  \"customerName\": {\n    \"type\": \"string\",\n    \"title\": \"Customer Name\",\n    \"description\": \"Name of the customer\"\n  },\n  \"preferredAgent\": {\n    \"type\": \"string\",\n    \"title\": \"Preferred Agent\",\n    \"description\": \"The name or ID of the agent preferred by the caller\"\n  },\n  \"customer\": {\n    \"type\": \"string\",\n    \"title\": \"Customer\",\n    \"description\": \"details of the caller\"\n  }\n}\n*/\n\nexport default async function run({ execution_id, input, data }) {\n  // --- Parse input data ---\n  const preferredAgent = data.preferredAgent;\n  const otherAgents = data[\"{{$42.result}}\"] !== \"null\" ? JSON.parse(data[\"{{$42.result}}\"]) : [];\n  const cust = JSON.parse(data.customer);\n\n  // --- Prepare agent definitions ---\n  const agentTemplates = [\n    {\n      name: \"Claire\",\n      id: \"2e07269b-35ee-4710-838a-0b2b65a73e46\",\n      firstMessage: `Hey, this is Claire. Why did you call me, ${data.customerName}?`\n    },\n    {\n      name: \"Alex\",\n      id: \"7373a956-d271-420e-9f9c-59300ac76c69\",\n      firstMessage: `Hi! Alex here. How's it going, ${data.customerName}?`\n    }\n  ];\n\n  // Add any additional agents from otherAgents\n  for (const agentStorage of otherAgents) {\n    const agent = agentStorage.value;\n    if (agent.name !== \"Alex\" && agent.name !== \"Claire\") {\n      agentTemplates.push({\n        name: agent.name,\n        id: agent.id,\n        firstMessage: null\n      });\n    }\n  }\n\n  // --- Build agentNameList for destinations ---\n  const agentNameList = agentTemplates.map(agent => agent.name);\n\n  // --- Create members with variable values ---\n  const members = agentTemplates.map(agent => ({\n    assistantId: agent.id,\n    ...(agent.firstMessage ? {\n      assistantOverrides: {\n        firstMessage: agent.firstMessage,\n        variableValues: {\n          first_name: data.customerName,\n          preferred_agent: data.preferredAgent,\n          observations: cust.observations,\n          city: cust.location_city,\n          zip: cust.location_zip\n        }\n      }\n    } : {\n      assistantOverrides: {\n        variableValues: {\n          first_name: data.customerName,\n          preferred_agent: data.preferredAgent,\n          observations: cust.observations,\n          city: cust.location_city,\n          zip: cust.location_zip\n        }\n      }\n    })\n    // assistantDestinations will be added below\n  }));\n\n  // --- Add assistantDestinations for every member ---\n  for (const member of members) {\n    const thisAgentName = agentTemplates.find(a => a.id === member.assistantId).name;\n    let otherNames = agentNameList.filter(name => name !== thisAgentName);\n\n    member.assistantDestinations = otherNames.map(otherName => ({\n      type: \"assistant\",\n      assistantName: otherName,\n      message: \"Sure, one moment please.\",\n      description: `If user wants to speak with ${otherName}, transfer to ${otherName}.`\n    }));\n  }\n\n  // --- Move preferredAgent to the first position ---\n  const prefIndex = members.findIndex(\n    m =>\n      agentTemplates.find(a => a.id === m.assistantId).name.toLowerCase() === (data.preferredAgent || \"\").toLowerCase()\n  );\n  if (prefIndex > 0) {\n    const [prefMember] = members.splice(prefIndex, 1);\n    members.unshift(prefMember);\n  }\n\n  return {\n    squad: { members }\n  };\n}",
            "text": "/** @CustomParams\n{\n  \"customerName\": {\n    \"type\": \"string\",\n    \"title\": \"Customer Name\",\n    \"description\": \"Name of the customer\"\n  },\n  \"preferredAgent\": {\n    \"type\": \"string\",\n    \"title\": \"Preferred Agent\",\n    \"description\": \"The name or ID of the agent preferred by the caller\"\n  },\n  \"customer\": {\n    \"type\": \"string\",\n    \"title\": \"Customer\",\n    \"description\": \"details of the caller\"\n  }\n}\n*/\n\nexport default async function run({ execution_id, input, data }) {\n  // --- Parse input data ---\n  const preferredAgent = data.preferredAgent;\n  const otherAgents = data[\"{{$42.result}}\"] !== \"null\" ? JSON.parse(data[\"{{$42.result}}\"]) : [];\n  const cust = JSON.parse(data.customer);\n\n  // --- Prepare agent definitions ---\n  const agentTemplates = [\n    {\n      name: \"Claire\",\n      id: \"2e07269b-35ee-4710-838a-0b2b65a73e46\",\n      firstMessage: `Hey, this is Claire. Why did you call me, ${data.customerName}?`\n    },\n    {\n      name: \"Alex\",\n      id: \"7373a956-d271-420e-9f9c-59300ac76c69\",\n      firstMessage: `Hi! Alex here. How's it going, ${data.customerName}?`\n    }\n  ];\n\n  // Add any additional agents from otherAgents\n  for (const agentStorage of otherAgents) {\n    const agent = agentStorage.value;\n    if (agent.name !== \"Alex\" && agent.name !== \"Claire\") {\n      agentTemplates.push({\n        name: agent.name,\n        id: agent.id,\n        firstMessage: null\n      });\n    }\n  }\n\n  // --- Build agentNameList for destinations ---\n  const agentNameList = agentTemplates.map(agent => agent.name);\n\n  // --- Create members with variable values ---\n  const members = agentTemplates.map(agent => ({\n    assistantId: agent.id,\n    ...(agent.firstMessage ? {\n      assistantOverrides: {\n        firstMessage: agent.firstMessage,\n        variableValues: {\n          first_name: data.customerName,\n          preferred_agent: data.preferredAgent,\n          observations: cust.observations,\n          city: cust.location_city,\n          zip: cust.location_zip\n        }\n      }\n    } : {\n      assistantOverrides: {\n        variableValues: {\n          first_name: data.customerName,\n          preferred_agent: data.preferredAgent,\n          observations: cust.observations,\n          city: cust.location_city,\n          zip: cust.location_zip\n        }\n      }\n    })\n    // assistantDestinations will be added below\n  }));\n\n  // --- Add assistantDestinations for every member ---\n  for (const member of members) {\n    const thisAgentName = agentTemplates.find(a => a.id === member.assistantId).name;\n    let otherNames = agentNameList.filter(name => name !== thisAgentName);\n\n    member.assistantDestinations = otherNames.map(otherName => ({\n      type: \"assistant\",\n      assistantName: otherName,\n      message: \"Sure, one moment please.\",\n      description: `If user wants to speak with ${otherName}, transfer to ${otherName}.`\n    }));\n  }\n\n  // --- Move preferredAgent to the first position ---\n  const prefIndex = members.findIndex(\n    m =>\n      agentTemplates.find(a => a.id === m.assistantId).name.toLowerCase() === (data.preferredAgent || \"\").toLowerCase()\n  );\n  if (prefIndex > 0) {\n    const [prefMember] = members.splice(prefIndex, 1);\n    members.unshift(prefMember);\n  }\n\n  return {\n    squad: { members }\n  };\n}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 417,
        "y": -298
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "customerName",
            "title": "Customer Name",
            "type": "string",
            "required": false,
            "description": "Name of the customer",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "preferredAgent",
            "title": "Preferred Agent",
            "type": "string",
            "required": false,
            "description": "The name or ID of the agent preferred by the caller",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "customer",
            "title": "Customer",
            "type": "string",
            "required": false,
            "description": "details of the caller",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "code",
            "title": "",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": {
                "lang": "",
                "prefix": "",
                "suffix": "",
                "fetchOn": []
              },
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "68387d0341684832b46215ea",
      "title": "",
      "description": "",
      "localId": "4",
      "typeId": "62cc22317ae28c026d25692e",
      "params": [
        {
          "key": "status",
          "type": "int",
          "value": {
            "stringToString": [],
            "int": "200",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "headers",
          "type": "string_to_string",
          "value": {
            "stringToString": [
              {
                "key": "content-type",
                "value": "application/json"
              }
            ],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "body",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "{{$3}}",
            "text": "{{$3}}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 613,
        "y": -298
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "status",
            "title": "Код ответа",
            "type": "int",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": {
                "max": 599,
                "min": 200,
                "fetchOn": []
              },
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "200",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "headers",
            "title": "Заголовки ответа",
            "type": "string_to_string",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": {
                "maxCount": 0,
                "fixedSize": false,
                "fetchOn": [],
                "allowEmpty": false
              },
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [
                {
                  "key": "content-type",
                  "value": "application/json"
                }
              ],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "body",
            "title": "Тело ответа",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "68387eea8e5e5fae9df38666",
      "title": "",
      "description": "",
      "localId": "6",
      "typeId": "62cc22317ae28c026d25692e",
      "params": [
        {
          "key": "status",
          "type": "int",
          "value": {
            "stringToString": [],
            "int": "200",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "headers",
          "type": "string_to_string",
          "value": {
            "stringToString": [
              {
                "key": "content-type",
                "value": "application/json"
              }
            ],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "body",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 256,
        "y": 61
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "status",
            "title": "Код ответа",
            "type": "int",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": {
                "max": 599,
                "min": 200,
                "fetchOn": []
              },
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "200",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "headers",
            "title": "Заголовки ответа",
            "type": "string_to_string",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": {
                "maxCount": 0,
                "fixedSize": false,
                "fetchOn": [],
                "allowEmpty": false
              },
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [
                {
                  "key": "content-type",
                  "value": "application/json"
                }
              ],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "body",
            "title": "Тело ответа",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "683889b148cc01db735b445b",
      "title": "Find customer",
      "description": "",
      "localId": "8",
      "typeId": "66bf657a22e621de86cbee7c",
      "params": [
        {
          "key": "storage_name",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "6d16c0c4-2139-45f6-a400-6f17e29229bb",
            "text": "6d16c0c4-2139-45f6-a400-6f17e29229bb",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "collection_name",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "user_info",
            "text": "user_info",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "filter",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "conditions:\n  - operation: equal\n    query:\n      path: phone_number\n    expected:\n      value: \"{{$1.body.message.customer.number}}\"",
            "text": "conditions:\n  - operation: equal\n    query:\n      path: phone_number\n    expected:\n      value: \"{{$1.body.message.customer.number}}\"",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "limit",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "offset",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 232,
        "y": -213
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "storage_name",
            "title": "Storage ID",
            "type": "text",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "collection_name",
            "title": "Collection name",
            "type": "text",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "filter",
            "title": "Filter",
            "type": "text",
            "required": false,
            "description": "Filter in YAML format. For details see [documentation](https://docs.latenode.com/docs/4eb52adf-0357-46a9-b85d-872b79ced50e/)",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "limit",
            "title": "Limit",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "offset",
            "title": "Offset",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "6838939c41684832b46217b9",
      "title": "Return squad",
      "description": "",
      "localId": "13",
      "typeId": "62cc22317ae28c026d256930",
      "params": [
        {
          "key": "previously_searched_reverse",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "{{16.result.[0].value}}",
            "text": "{{16.result.[0].value}}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "callerId_lookup",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "{{15.data}}",
            "text": "{{15.data}}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "code",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "/** @CustomParams\n{\n  \"previously_searched_reverse\": {\n    \"type\": \"string\",\n    \"title\": \"Previous Search Reverse Lookup\"\n  },\n  \"callerId_lookup\": {\n    \"type\": \"string\",\n    \"title\": \"Caller ID lookup results\"\n  }\n}\n*/\nexport default async function run({ execution_id, input, data }) {\n  const previousResult = JSON.parse(data.previously_searched_reverse);\n  const callerIDResult = JSON.parse(data.callerId_lookup);\n  const otherAgents = data[\"{{$42.result}}\"] !== \"null\" ? JSON.parse(data[\"{{$42.result}}\"]) : [];\n    \n    // --- Prepare agent definitions ---\n  const agentTemplates = [\n    {\n      name: \"Claire\",\n      id: \"2e07269b-35ee-4710-838a-0b2b65a73e46\"\n    },\n    {\n      name: \"Alex\",\n      id: \"7373a956-d271-420e-9f9c-59300ac76c69\"\n    }\n  ];\n  \n  // Add any additional agents from otherAgents\n  for (const agentStorage of otherAgents) {\n    const agent = agentStorage.value;\n    if (agent.name !== \"Alex\" && agent.name !== \"Claire\") {\n      agentTemplates.push({\n        name: agent.name,\n        id: agent.id\n      });\n    }\n  }\n  \n  // --- Build agentNameList for destinations ---\n  const agentNameList = agentTemplates.map(agent => agent.name);\n\n  \n  \n  // --- Create members with variable values ---\n  const members = agentTemplates.map(agent => ({\n    assistantId: agent.id,\n    ...({\n      assistantOverrides: {\n        variableValues: {\n          first_name: data.customerName\n        }\n      }\n    })\n    // assistantDestinations will be added below\n  }));\n\n  // --- Add assistantDestinations for every member ---\n  for (const member of members) {\n    const thisAgentName = agentTemplates.find(a => a.id === member.assistantId).name;\n    let otherNames = agentNameList.filter(name => name !== thisAgentName);\n\n    member.assistantDestinations = otherNames.map(otherName => ({\n      type: \"assistant\",\n      assistantName: otherName,\n      message: \"Sure, one moment please.\",\n      description: `If user wants to speak with ${otherName}, transfer to ${otherName}.`\n    }));\n  }\n\n  // --- Move preferredAgent to the first position ---\n  const prefIndex = members.findIndex(\n    m =>\n      agentTemplates.find(a => a.id === m.assistantId).name.toLowerCase() === (data.preferredAgent || \"\").toLowerCase()\n  );\n  if (prefIndex > 0) {\n    const [prefMember] = members.splice(prefIndex, 1);\n    members.unshift(prefMember);\n  }\n  \n  return {\n    squad: {\n      members\n    }\n  }\n}",
            "text": "/** @CustomParams\n{\n  \"previously_searched_reverse\": {\n    \"type\": \"string\",\n    \"title\": \"Previous Search Reverse Lookup\"\n  },\n  \"callerId_lookup\": {\n    \"type\": \"string\",\n    \"title\": \"Caller ID lookup results\"\n  }\n}\n*/\nexport default async function run({ execution_id, input, data }) {\n  const previousResult = JSON.parse(data.previously_searched_reverse);\n  const callerIDResult = JSON.parse(data.callerId_lookup);\n  const otherAgents = data[\"{{$42.result}}\"] !== \"null\" ? JSON.parse(data[\"{{$42.result}}\"]) : [];\n    \n    // --- Prepare agent definitions ---\n  const agentTemplates = [\n    {\n      name: \"Claire\",\n      id: \"2e07269b-35ee-4710-838a-0b2b65a73e46\"\n    },\n    {\n      name: \"Alex\",\n      id: \"7373a956-d271-420e-9f9c-59300ac76c69\"\n    }\n  ];\n  \n  // Add any additional agents from otherAgents\n  for (const agentStorage of otherAgents) {\n    const agent = agentStorage.value;\n    if (agent.name !== \"Alex\" && agent.name !== \"Claire\") {\n      agentTemplates.push({\n        name: agent.name,\n        id: agent.id\n      });\n    }\n  }\n  \n  // --- Build agentNameList for destinations ---\n  const agentNameList = agentTemplates.map(agent => agent.name);\n\n  \n  \n  // --- Create members with variable values ---\n  const members = agentTemplates.map(agent => ({\n    assistantId: agent.id,\n    ...({\n      assistantOverrides: {\n        variableValues: {\n          first_name: data.customerName\n        }\n      }\n    })\n    // assistantDestinations will be added below\n  }));\n\n  // --- Add assistantDestinations for every member ---\n  for (const member of members) {\n    const thisAgentName = agentTemplates.find(a => a.id === member.assistantId).name;\n    let otherNames = agentNameList.filter(name => name !== thisAgentName);\n\n    member.assistantDestinations = otherNames.map(otherName => ({\n      type: \"assistant\",\n      assistantName: otherName,\n      message: \"Sure, one moment please.\",\n      description: `If user wants to speak with ${otherName}, transfer to ${otherName}.`\n    }));\n  }\n\n  // --- Move preferredAgent to the first position ---\n  const prefIndex = members.findIndex(\n    m =>\n      agentTemplates.find(a => a.id === m.assistantId).name.toLowerCase() === (data.preferredAgent || \"\").toLowerCase()\n  );\n  if (prefIndex > 0) {\n    const [prefMember] = members.splice(prefIndex, 1);\n    members.unshift(prefMember);\n  }\n  \n  return {\n    squad: {\n      members\n    }\n  }\n}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 424,
        "y": -150
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "previously_searched_reverse",
            "title": "Previous Search Reverse Lookup",
            "type": "string",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "callerId_lookup",
            "title": "Caller ID lookup results",
            "type": "string",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "code",
            "title": "",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": {
                "lang": "",
                "prefix": "",
                "suffix": "",
                "fetchOn": []
              },
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "6838939c41684832b46217ba",
      "title": "",
      "description": "",
      "localId": "14",
      "typeId": "62cc22317ae28c026d25692e",
      "params": [
        {
          "key": "status",
          "type": "int",
          "value": {
            "stringToString": [],
            "int": "200",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "headers",
          "type": "string_to_string",
          "value": {
            "stringToString": [
              {
                "key": "content-type",
                "value": "application/json"
              }
            ],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "body",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "{{$13}}",
            "text": "{{$13}}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 585,
        "y": -149
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "status",
            "title": "Код ответа",
            "type": "int",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": {
                "max": 599,
                "min": 200,
                "fetchOn": []
              },
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "200",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "headers",
            "title": "Заголовки ответа",
            "type": "string_to_string",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": {
                "maxCount": 0,
                "fixedSize": false,
                "fetchOn": [],
                "allowEmpty": false
              },
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [
                {
                  "key": "content-type",
                  "value": "application/json"
                }
              ],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "body",
            "title": "Тело ответа",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "68389d6c9a7b3e043f97cc7c",
      "title": "Caller ID Lookup",
      "description": "",
      "localId": "15",
      "typeId": "62cc22317ae28c026d256930",
      "params": [
        {
          "key": "phone_number",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "{{$1.body.message.customer.number}}",
            "text": "{{$1.body.message.customer.number}}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "api_key",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "...",
            "text": "...",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "code",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "/** @CustomParams\n{\n  \"phone_number\": {\n    \"type\": \"string\",\n    \"title\": \"Phone Number\",\n    \"description\": \"The phone number to look up (E.164 format recommended)\"\n  },\n  \"api_key\": {\n    \"type\": \"string\",\n    \"title\": \"API Key\",\n    \"description\": \"Your TrestleIQ API key\"\n  }\n}\n*/\n\nimport axios from \"axios\";\n\nexport default async function run({execution_id, input, data}) {\n  const phone = data.phone_number;\n  const apiKey = data.api_key;\n\n  const url = `https://api.trestleiq.com/3.1/caller_id?phone=${encodeURIComponent(phone)}`;\n\n  try {\n    const response = await axios.get(url, {\n      headers: {\n        accept: 'application/json',\n        'x-api-key': apiKey\n      }\n    });\n\n    return {\n      success: true,\n      status: response.status,\n      data: response.data\n    };\n  } catch (error) {\n    return {\n      success: false,\n      error: error.response ? error.response.data : error.message\n    };\n  }\n}",
            "text": "/** @CustomParams\n{\n  \"phone_number\": {\n    \"type\": \"string\",\n    \"title\": \"Phone Number\",\n    \"description\": \"The phone number to look up (E.164 format recommended)\"\n  },\n  \"api_key\": {\n    \"type\": \"string\",\n    \"title\": \"API Key\",\n    \"description\": \"Your TrestleIQ API key\"\n  }\n}\n*/\n\nimport axios from \"axios\";\n\nexport default async function run({execution_id, input, data}) {\n  const phone = data.phone_number;\n  const apiKey = data.api_key;\n\n  const url = `https://api.trestleiq.com/3.1/caller_id?phone=${encodeURIComponent(phone)}`;\n\n  try {\n    const response = await axios.get(url, {\n      headers: {\n        accept: 'application/json',\n        'x-api-key': apiKey\n      }\n    });\n\n    return {\n      success: true,\n      status: response.status,\n      data: response.data\n    };\n  } catch (error) {\n    return {\n      success: false,\n      error: error.response ? error.response.data : error.message\n    };\n  }\n}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 742,
        "y": 176
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "phone_number",
            "title": "Phone Number",
            "type": "string",
            "required": false,
            "description": "The phone number to look up (E.164 format recommended)",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "api_key",
            "title": "API Key",
            "type": "string",
            "required": false,
            "description": "Your TrestleIQ API key",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "code",
            "title": "",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": {
                "lang": "",
                "prefix": "",
                "suffix": "",
                "fetchOn": []
              },
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "6838a0ba482cccbbaec76ab9",
      "title": "Find customer in reverse phone lookup",
      "description": "",
      "localId": "16",
      "typeId": "66bf657a22e621de86cbee7c",
      "params": [
        {
          "key": "storage_name",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "6d16c0c4-2139-45f6-a400-6f17e29229bb",
            "text": "6d16c0c4-2139-45f6-a400-6f17e29229bb",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "collection_name",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "reverse_phone_lookup_info",
            "text": "reverse_phone_lookup_info",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "filter",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "conditions:\n  - operation: equal\n    query:\n      path: phone_number\n    expected:\n      value: \"{{$1.body.message.customer.number}}\"",
            "text": "conditions:\n  - operation: equal\n    query:\n      path: phone_number\n    expected:\n      value: \"{{$1.body.message.customer.number}}\"",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "limit",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "offset",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 552,
        "y": 62
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "storage_name",
            "title": "Storage ID",
            "type": "text",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "collection_name",
            "title": "Collection name",
            "type": "text",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "filter",
            "title": "Filter",
            "type": "text",
            "required": false,
            "description": "Filter in YAML format. For details see [documentation](https://docs.latenode.com/docs/4eb52adf-0357-46a9-b85d-872b79ced50e/)",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "limit",
            "title": "Limit",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "offset",
            "title": "Offset",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "6838a17d9a7b3e043f97cc9b",
      "title": "",
      "description": "",
      "localId": "17",
      "typeId": "66bf657a22e621de86cbee7b",
      "params": [
        {
          "key": "storage_name",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "6d16c0c4-2139-45f6-a400-6f17e29229bb",
            "text": "6d16c0c4-2139-45f6-a400-6f17e29229bb",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "collection_name",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "reverse_phone_lookup_info",
            "text": "reverse_phone_lookup_info",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "object",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "{{$15.data}}",
            "text": "{{$15.data}}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 932,
        "y": 176
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "storage_name",
            "title": "Storage ID",
            "type": "text",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "collection_name",
            "title": "Collection name",
            "type": "text",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "object",
            "title": "Object",
            "type": "text",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "6838b37041684832b462190f",
      "title": "",
      "description": "",
      "localId": "21",
      "typeId": "62cc22317ae28c026d25692e",
      "params": [
        {
          "key": "status",
          "type": "int",
          "value": {
            "stringToString": [],
            "int": "200",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "headers",
          "type": "string_to_string",
          "value": {
            "stringToString": [
              {
                "key": "content-type",
                "value": "application/json"
              }
            ],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "body",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 178,
        "y": 716
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "6838bd4f8e5e5fae9df38bd1",
      "title": "Build/Create/Update customer",
      "description": "",
      "localId": "24",
      "typeId": "62cc22317ae28c026d256930",
      "params": [
        {
          "key": "database_id",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "6d16c0c4-2139-45f6-a400-6f17e29229bb",
            "text": "6d16c0c4-2139-45f6-a400-6f17e29229bb",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "collection_name",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "user_info",
            "text": "user_info",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "aiAnalysisUserNameMarkdown",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "{{$20.`result`.`choices`.[0].`message`.`content`}}",
            "text": "{{$20.`result`.`choices`.[0].`message`.`content`}}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "aiAnalysisUserPreferencesMarkdown",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "{{$37.`result`.`choices`.[0].`message`.`content`}}",
            "text": "{{$37.`result`.`choices`.[0].`message`.`content`}}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "phoneNumber",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "{{1.body.message.customer.number}}",
            "text": "{{1.body.message.customer.number}}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "preferredAgent",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "{{$32.destination}}",
            "text": "{{$32.destination}}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "userStoredResult",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "{{26.result.[0].value}}",
            "text": "{{26.result.[0].value}}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "callerIdStoredResult",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "{{29.result.[0].value}}",
            "text": "{{29.result.[0].value}}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "code",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "/** @CustomParams\n{\n    \"database_id\": {\n        \"type\": \"string\",\n        \"title\": \"Database ID\",\n        \"description\": \"The ID of the database to connect to\"\n    },\n    \"collection_name\": {\n        \"type\": \"string\",\n        \"title\": \"Collection Name\",\n        \"description\": \"The name of the collection to search in\"\n    },\n    \"aiAnalysisUserNameMarkdown\": {\n        \"title\": \"User's name analysis\",\n        \"key\": \"aiAnalysisUserNameMarkdown\",\n        \"description\": \"Paste the markdown text containing the JSON code block. You can map this from {{20.result.choices[0].message.content}}\",\n        \"type\": \"string\"\n    },\n    \"aiAnalysisUserPreferencesMarkdown\": {\n        \"title\": \"User's preferences analysis\",\n        \"key\": \"aiAnalysisUserPreferencesMarkdown\",\n        \"description\": \"Paste the markdown text containing the JSON code block. You can map this from {{20.result.choices[0].message.content}}\",\n        \"type\": \"string\"\n    },\n    \"phoneNumber\": {\n        \"title\": \"Customer phone number\",\n        \"key\": \"phoneNumber\",\n        \"type\": \"string\"\n    },\n    \"preferredAgent\": {\n        \"title\": \"Preferred Agent\",\n        \"key\": \"preferredAgent\",\n        \"type\": \"string\"\n    },\n    \"userStoredResult\": {\n        \"title\": \"User Info Stored Result\",\n        \"key\": \"userStoredResult\",\n        \"type\": \"string\"\n    },\n    \"callerIdStoredResult\": {\n        \"title\": \"Caller ID Stored Result\",\n        \"key\": \"callerIdStoredResult\",\n        \"type\": \"string\"\n    }\n}\n*/\n\nimport _ from 'lodash';\n\n// Helper: deduplicate array of objects by key (default: \"id\")\nfunction deduplicateArray(arr, uniqueKey = \"id\") {\n    if (!Array.isArray(arr)) return arr;\n    if (arr.length === 0) return [];\n    // If items are primitives, just use _.uniq\n    if (typeof arr[0] !== \"object\" || arr[0] === null) {\n        return _.uniq(arr);\n    }\n    // If items are objects, use uniqBy with the unique key\n    return _.uniqBy(arr, uniqueKey);\n}\n\n// Recursive merge with array concatenation and deduplication\nfunction mergeFields(existing, updates, dedupeKey = \"id\") {\n    const result = { ...existing };\n    for (const [key, value] of Object.entries(updates)) {\n        if (Array.isArray(value)) {\n            if (Array.isArray(existing[key])) {\n                // Recursively merge array items if they are objects\n                const mergedArray = existing[key].concat(value);\n                result[key] = deduplicateArray(mergedArray, dedupeKey);\n            } else {\n                result[key] = deduplicateArray(value, dedupeKey);\n            }\n        } else if (\n            typeof value === \"string\" ||\n            typeof value === \"number\" ||\n            typeof value === \"boolean\" ||\n            value === null\n        ) {\n            result[key] = value;\n        } else if (typeof value === \"object\" && value !== null) {\n            result[key] = mergeFields(existing[key] || {}, value, dedupeKey);\n        } else {\n            result[key] = value;\n        }\n    }\n    return result;\n}\n\nexport default async function run({ data, db }) {\n    const database_id = data.database_id;\n    const collection_name = data.collection_name;\n\n    const database = db.database(database_id);\n    const collection = database.collection(collection_name);\n\n    function extractAndCleanJson(markdown) {\n        if (typeof markdown !== 'string') throw new Error('Input is not a string.');\n        const jsonCodeBlockRegex = /```json\\s*([\\s\\S]*?)```/i;\n        const match = markdown.match(jsonCodeBlockRegex);\n        let jsonString = match ? match[1] : markdown.trim();\n        let obj;\n        try {\n            obj = JSON.parse(jsonString);\n        } catch (e) {\n            throw new Error('Failed to parse JSON: ' + e.message);\n        }\n        // Clean up null, empty, 'N/A', 'Not provided', 'null'\n        ['first_name', 'last_name', 'preferred_agent'].forEach(field => {\n            if (\n                Object.prototype.hasOwnProperty.call(obj, field) &&\n                (obj[field] === null ||\n                    obj[field] === '' ||\n                    obj[field] === 'N/A' ||\n                    obj[field] === 'Not provided' ||\n                    obj[field] === 'null')\n            ) {\n                delete obj[field];\n            }\n        });\n        return obj;\n    }\n\n    // Parse and clean both\n    //const nameObj = extractAndCleanJson(data.aiAnalysisUserNameMarkdown);\n    const preferencesObj = extractAndCleanJson(data.aiAnalysisUserPreferencesMarkdown);\n\n    // Merge, user preferences override name analysis if same fields exist\n    let parsed = {};\n    if (data.userStoredResult) {\n        try {\n            const eobj = JSON.parse(data.userStoredResult);\n            //parsed = { ...eobj, ...nameObj };\n            parsed = eobj;\n        } catch {\n            throw Error('unable to parse existing customer data');\n        }\n    } else {\n        //parsed = { ...nameObj };\n    }\n    parsed = { ...parsed, ...preferencesObj };\n\n    // Add phone_number and preferred_agent if available\n    if (data.phoneNumber) parsed.phone_number = data.phoneNumber;\n    if (data.preferredAgent) parsed.preferred_agent = data.preferredAgent;\n\n    if (data.callerIdStoredResult && parsed.confirmed) {\n        let callerIdStoredResult = null;\n        try {\n            callerIdStoredResult = JSON.parse(data.callerIdStoredResult);\n            // If the structure is different, adjust property names below\n            parsed.first_name = callerIdStoredResult.belongs_to?.firstname || parsed.first_name;\n            parsed.last_name = callerIdStoredResult.belongs_to?.lastname || parsed.last_name;\n            // only set the location if there isn't one already so that we don't override a preference or manually set location\n            parsed.location_city = userStoredResult.location_city ? userStoredResult.location_city : callerIdStoredResult.current_address?.city || parsed.location_city;\n            parsed.location_state_code = userStoredResult.location_state_code ? userStoredResult.location_state_code : callerIdStoredResult.current_address?.state_code || parsed.location_state_code;\n            parsed.location_zip = userStoredResult.location_zip ? userStoredResult.location_zip : callerIdStoredResult.current_address?.postal_code || parsed.location_zip;\n        } catch (error) {\n            console.error(`Error with callerIdStoredResult: ${error}`);\n        }\n    }\n\n    // Clean again in case merged fields need it\n    ['first_name', 'last_name', 'preferred_agent'].forEach(field => {\n        if (\n            Object.prototype.hasOwnProperty.call(parsed, field) &&\n            (parsed[field] === null ||\n                parsed[field] === '' ||\n                parsed[field] === 'N/A' ||\n                parsed[field] === 'Not provided' ||\n                parsed[field] === 'null')\n        ) {\n            delete parsed[field];\n        }\n    });\n\n    let createdCount = 0;\n    let updatedCount = 0;\n    const filterObj = {\n        conditions: [\n            {\n                operation: \"equal\",\n                query: {\n                    path: \"phone_number\"\n                },\n                expected: {\n                    value: data.phoneNumber\n                }\n            }\n        ]\n    };\n\n    // Fetch objects matching the filter\n    const objects = await collection.findObjects(10, 0, filterObj);\n\n    let mergedObj;\n    let existingObject;\n    if (objects.length === 0) {\n        // No customer object exists, create it\n        try {\n            await collection.createObject(parsed);\n            createdCount++;\n        } catch (error) {\n            console.error(`Error creating customer object: ${error}`);\n        }\n    } else {\n        // Customer object exists, update it\n        existingObject = objects[0].value;\n        // Merge according to requirements: string fields overwrite, arrays append and deduplicate\n        mergedObj = mergeFields(existingObject, parsed, \"id\"); // Change \"id\" if you want to deduplicate by another field\n\n        if (!_.isEqual(existingObject, mergedObj)) {\n            try {\n                await collection.deleteObject(objects[0].object_id)\n                await collection.createObject(mergedObj);\n                updatedCount++;\n            } catch (error) {\n                console.error(`Error updating customer object: ${error}`);\n            }\n        }\n    }\n\n    return {\n        status: 'Success',\n        existingObject,\n        newObj: parsed,\n        mergedObj,\n        createdCount,\n        updatedCount\n    };\n}",
            "text": "/** @CustomParams\n{\n    \"database_id\": {\n        \"type\": \"string\",\n        \"title\": \"Database ID\",\n        \"description\": \"The ID of the database to connect to\"\n    },\n    \"collection_name\": {\n        \"type\": \"string\",\n        \"title\": \"Collection Name\",\n        \"description\": \"The name of the collection to search in\"\n    },\n    \"aiAnalysisUserNameMarkdown\": {\n        \"title\": \"User's name analysis\",\n        \"key\": \"aiAnalysisUserNameMarkdown\",\n        \"description\": \"Paste the markdown text containing the JSON code block. You can map this from {{20.result.choices[0].message.content}}\",\n        \"type\": \"string\"\n    },\n    \"aiAnalysisUserPreferencesMarkdown\": {\n        \"title\": \"User's preferences analysis\",\n        \"key\": \"aiAnalysisUserPreferencesMarkdown\",\n        \"description\": \"Paste the markdown text containing the JSON code block. You can map this from {{20.result.choices[0].message.content}}\",\n        \"type\": \"string\"\n    },\n    \"phoneNumber\": {\n        \"title\": \"Customer phone number\",\n        \"key\": \"phoneNumber\",\n        \"type\": \"string\"\n    },\n    \"preferredAgent\": {\n        \"title\": \"Preferred Agent\",\n        \"key\": \"preferredAgent\",\n        \"type\": \"string\"\n    },\n    \"userStoredResult\": {\n        \"title\": \"User Info Stored Result\",\n        \"key\": \"userStoredResult\",\n        \"type\": \"string\"\n    },\n    \"callerIdStoredResult\": {\n        \"title\": \"Caller ID Stored Result\",\n        \"key\": \"callerIdStoredResult\",\n        \"type\": \"string\"\n    }\n}\n*/\n\nimport _ from 'lodash';\n\n// Helper: deduplicate array of objects by key (default: \"id\")\nfunction deduplicateArray(arr, uniqueKey = \"id\") {\n    if (!Array.isArray(arr)) return arr;\n    if (arr.length === 0) return [];\n    // If items are primitives, just use _.uniq\n    if (typeof arr[0] !== \"object\" || arr[0] === null) {\n        return _.uniq(arr);\n    }\n    // If items are objects, use uniqBy with the unique key\n    return _.uniqBy(arr, uniqueKey);\n}\n\n// Recursive merge with array concatenation and deduplication\nfunction mergeFields(existing, updates, dedupeKey = \"id\") {\n    const result = { ...existing };\n    for (const [key, value] of Object.entries(updates)) {\n        if (Array.isArray(value)) {\n            if (Array.isArray(existing[key])) {\n                // Recursively merge array items if they are objects\n                const mergedArray = existing[key].concat(value);\n                result[key] = deduplicateArray(mergedArray, dedupeKey);\n            } else {\n                result[key] = deduplicateArray(value, dedupeKey);\n            }\n        } else if (\n            typeof value === \"string\" ||\n            typeof value === \"number\" ||\n            typeof value === \"boolean\" ||\n            value === null\n        ) {\n            result[key] = value;\n        } else if (typeof value === \"object\" && value !== null) {\n            result[key] = mergeFields(existing[key] || {}, value, dedupeKey);\n        } else {\n            result[key] = value;\n        }\n    }\n    return result;\n}\n\nexport default async function run({ data, db }) {\n    const database_id = data.database_id;\n    const collection_name = data.collection_name;\n\n    const database = db.database(database_id);\n    const collection = database.collection(collection_name);\n\n    function extractAndCleanJson(markdown) {\n        if (typeof markdown !== 'string') throw new Error('Input is not a string.');\n        const jsonCodeBlockRegex = /```json\\s*([\\s\\S]*?)```/i;\n        const match = markdown.match(jsonCodeBlockRegex);\n        let jsonString = match ? match[1] : markdown.trim();\n        let obj;\n        try {\n            obj = JSON.parse(jsonString);\n        } catch (e) {\n            throw new Error('Failed to parse JSON: ' + e.message);\n        }\n        // Clean up null, empty, 'N/A', 'Not provided', 'null'\n        ['first_name', 'last_name', 'preferred_agent'].forEach(field => {\n            if (\n                Object.prototype.hasOwnProperty.call(obj, field) &&\n                (obj[field] === null ||\n                    obj[field] === '' ||\n                    obj[field] === 'N/A' ||\n                    obj[field] === 'Not provided' ||\n                    obj[field] === 'null')\n            ) {\n                delete obj[field];\n            }\n        });\n        return obj;\n    }\n\n    // Parse and clean both\n    //const nameObj = extractAndCleanJson(data.aiAnalysisUserNameMarkdown);\n    const preferencesObj = extractAndCleanJson(data.aiAnalysisUserPreferencesMarkdown);\n\n    // Merge, user preferences override name analysis if same fields exist\n    let parsed = {};\n    if (data.userStoredResult) {\n        try {\n            const eobj = JSON.parse(data.userStoredResult);\n            //parsed = { ...eobj, ...nameObj };\n            parsed = eobj;\n        } catch {\n            throw Error('unable to parse existing customer data');\n        }\n    } else {\n        //parsed = { ...nameObj };\n    }\n    parsed = { ...parsed, ...preferencesObj };\n\n    // Add phone_number and preferred_agent if available\n    if (data.phoneNumber) parsed.phone_number = data.phoneNumber;\n    if (data.preferredAgent) parsed.preferred_agent = data.preferredAgent;\n\n    if (data.callerIdStoredResult && parsed.confirmed) {\n        let callerIdStoredResult = null;\n        try {\n            callerIdStoredResult = JSON.parse(data.callerIdStoredResult);\n            // If the structure is different, adjust property names below\n            parsed.first_name = callerIdStoredResult.belongs_to?.firstname || parsed.first_name;\n            parsed.last_name = callerIdStoredResult.belongs_to?.lastname || parsed.last_name;\n            // only set the location if there isn't one already so that we don't override a preference or manually set location\n            parsed.location_city = userStoredResult.location_city ? userStoredResult.location_city : callerIdStoredResult.current_address?.city || parsed.location_city;\n            parsed.location_state_code = userStoredResult.location_state_code ? userStoredResult.location_state_code : callerIdStoredResult.current_address?.state_code || parsed.location_state_code;\n            parsed.location_zip = userStoredResult.location_zip ? userStoredResult.location_zip : callerIdStoredResult.current_address?.postal_code || parsed.location_zip;\n        } catch (error) {\n            console.error(`Error with callerIdStoredResult: ${error}`);\n        }\n    }\n\n    // Clean again in case merged fields need it\n    ['first_name', 'last_name', 'preferred_agent'].forEach(field => {\n        if (\n            Object.prototype.hasOwnProperty.call(parsed, field) &&\n            (parsed[field] === null ||\n                parsed[field] === '' ||\n                parsed[field] === 'N/A' ||\n                parsed[field] === 'Not provided' ||\n                parsed[field] === 'null')\n        ) {\n            delete parsed[field];\n        }\n    });\n\n    let createdCount = 0;\n    let updatedCount = 0;\n    const filterObj = {\n        conditions: [\n            {\n                operation: \"equal\",\n                query: {\n                    path: \"phone_number\"\n                },\n                expected: {\n                    value: data.phoneNumber\n                }\n            }\n        ]\n    };\n\n    // Fetch objects matching the filter\n    const objects = await collection.findObjects(10, 0, filterObj);\n\n    let mergedObj;\n    let existingObject;\n    if (objects.length === 0) {\n        // No customer object exists, create it\n        try {\n            await collection.createObject(parsed);\n            createdCount++;\n        } catch (error) {\n            console.error(`Error creating customer object: ${error}`);\n        }\n    } else {\n        // Customer object exists, update it\n        existingObject = objects[0].value;\n        // Merge according to requirements: string fields overwrite, arrays append and deduplicate\n        mergedObj = mergeFields(existingObject, parsed, \"id\"); // Change \"id\" if you want to deduplicate by another field\n\n        if (!_.isEqual(existingObject, mergedObj)) {\n            try {\n                await collection.deleteObject(objects[0].object_id)\n                await collection.createObject(mergedObj);\n                updatedCount++;\n            } catch (error) {\n                console.error(`Error updating customer object: ${error}`);\n            }\n        }\n    }\n\n    return {\n        status: 'Success',\n        existingObject,\n        newObj: parsed,\n        mergedObj,\n        createdCount,\n        updatedCount\n    };\n}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 1073,
        "y": 714
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "database_id",
            "title": "Database ID",
            "type": "string",
            "required": false,
            "description": "The ID of the database to connect to",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "collection_name",
            "title": "Collection Name",
            "type": "string",
            "required": false,
            "description": "The name of the collection to search in",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "aiAnalysisUserNameMarkdown",
            "title": "User's name analysis",
            "type": "string",
            "required": false,
            "description": "Paste the markdown text containing the JSON code block. You can map this from {{20.result.choices[0].message.content}}",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "aiAnalysisUserPreferencesMarkdown",
            "title": "User's preferences analysis",
            "type": "string",
            "required": false,
            "description": "Paste the markdown text containing the JSON code block. You can map this from {{20.result.choices[0].message.content}}",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "phoneNumber",
            "title": "Customer phone number",
            "type": "string",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "preferredAgent",
            "title": "Preferred Agent",
            "type": "string",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "userStoredResult",
            "title": "User Info Stored Result",
            "type": "string",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "callerIdStoredResult",
            "title": "Caller ID Stored Result",
            "type": "string",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "code",
            "title": "",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": {
                "lang": "",
                "prefix": "",
                "suffix": "",
                "fetchOn": []
              },
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "6838d2e9a68f16d255ebf474",
      "title": "unused",
      "description": "",
      "localId": "25",
      "typeId": "62cc22317ae28c026d25692e",
      "params": [
        {
          "key": "status",
          "type": "int",
          "value": {
            "stringToString": [],
            "int": "200",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "headers",
          "type": "string_to_string",
          "value": {
            "stringToString": [
              {
                "key": "content-type",
                "value": "application/json"
              }
            ],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "body",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "\r",
            "text": "\r",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 310,
        "y": 372
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "status",
            "title": "Код ответа",
            "type": "int",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": {
                "max": 599,
                "min": 200,
                "fetchOn": []
              },
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "200",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "headers",
            "title": "Заголовки ответа",
            "type": "string_to_string",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": {
                "maxCount": 0,
                "fixedSize": false,
                "fetchOn": [],
                "allowEmpty": false
              },
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [
                {
                  "key": "content-type",
                  "value": "application/json"
                }
              ],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "body",
            "title": "Тело ответа",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "68393c1241684832b4621c25",
      "title": "Find customer",
      "description": "",
      "localId": "26",
      "typeId": "66bf657a22e621de86cbee7c",
      "params": [
        {
          "key": "storage_name",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "6d16c0c4-2139-45f6-a400-6f17e29229bb",
            "text": "6d16c0c4-2139-45f6-a400-6f17e29229bb",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "collection_name",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "user_info",
            "text": "user_info",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "filter",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "conditions:\n  - operation: equal\n    query:\n      path: phone_number\n    expected:\n      value: \"{{$1.body.message.customer.number}}\"",
            "text": "conditions:\n  - operation: equal\n    query:\n      path: phone_number\n    expected:\n      value: \"{{$1.body.message.customer.number}}\"",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "limit",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "offset",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 436,
        "y": 717
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "storage_name",
            "title": "Storage ID",
            "type": "text",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "collection_name",
            "title": "Collection name",
            "type": "text",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "filter",
            "title": "Filter",
            "type": "text",
            "required": false,
            "description": "Filter in YAML format. For details see [documentation](https://docs.latenode.com/docs/4eb52adf-0357-46a9-b85d-872b79ced50e/)",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "limit",
            "title": "Limit",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "offset",
            "title": "Offset",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "6839d6cb4f57a37c78923472",
      "title": "Retrieve caller ID",
      "description": "",
      "localId": "29",
      "typeId": "66bf657a22e621de86cbee7c",
      "params": [
        {
          "key": "storage_name",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "6d16c0c4-2139-45f6-a400-6f17e29229bb",
            "text": "6d16c0c4-2139-45f6-a400-6f17e29229bb",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "collection_name",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "reverse_phone_lookup_info",
            "text": "reverse_phone_lookup_info",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "filter",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "conditions:\n  - operation: equal\n    query:\n      path: phone_number\n    expected:\n      value: \"{{$1.body.message.customer.number}}\"",
            "text": "conditions:\n  - operation: equal\n    query:\n      path: phone_number\n    expected:\n      value: \"{{$1.body.message.customer.number}}\"",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "limit",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "offset",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 311,
        "y": 717
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "storage_name",
            "title": "Storage ID",
            "type": "text",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "collection_name",
            "title": "Collection name",
            "type": "text",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "filter",
            "title": "Filter",
            "type": "text",
            "required": false,
            "description": "Filter in YAML format. For details see [documentation](https://docs.latenode.com/docs/4eb52adf-0357-46a9-b85d-872b79ced50e/)",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "limit",
            "title": "Limit",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "offset",
            "title": "Offset",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "6839e1ccffe5d69f609cc2eb",
      "title": "Extract transfer destination",
      "description": "",
      "localId": "32",
      "typeId": "62cc22317ae28c026d256930",
      "params": [
        {
          "key": "body",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "{{$1.`body`}}",
            "text": "{{$1.`body`}}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "code",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "/** @CustomParams\n{\n  \"body\": {\n    \"title\": \"Body (JSON string of data)\",\n    \"key\": \"body\",\n    \"description\": \"Provide the JSON string of the object that contains message.artifact.messages\",\n    \"type\": \"string\"\n  }\n}\n*/\nexport default async function run({ data }) {\n  let messages;\n  try {\n    const bodyObj = typeof data.body === 'string' ? JSON.parse(data.body) : data.body;\n    messages = bodyObj.message?.artifact?.messages;\n    if (!Array.isArray(messages)) {\n      throw new Error('messages array not found');\n    }\n  } catch (e) {\n    return { error: 'Failed to parse body or messages array: ' + e.message };\n  }\n\n  let lastDestination = null;\n  for (const msg of messages) {\n    const toolCalls = msg.toolCalls;\n    if (Array.isArray(toolCalls) && toolCalls[0]?.function?.name === 'transferCall') {\n      try {\n        const args = JSON.parse(toolCalls[0].function.arguments);\n        if (args.destination) {\n          lastDestination = args.destination;\n        }\n      } catch (e) {\n        // skip if parsing fails\n      }\n    }\n  }\n  return { destination: lastDestination };\n}",
            "text": "/** @CustomParams\n{\n  \"body\": {\n    \"title\": \"Body (JSON string of data)\",\n    \"key\": \"body\",\n    \"description\": \"Provide the JSON string of the object that contains message.artifact.messages\",\n    \"type\": \"string\"\n  }\n}\n*/\nexport default async function run({ data }) {\n  let messages;\n  try {\n    const bodyObj = typeof data.body === 'string' ? JSON.parse(data.body) : data.body;\n    messages = bodyObj.message?.artifact?.messages;\n    if (!Array.isArray(messages)) {\n      throw new Error('messages array not found');\n    }\n  } catch (e) {\n    return { error: 'Failed to parse body or messages array: ' + e.message };\n  }\n\n  let lastDestination = null;\n  for (const msg of messages) {\n    const toolCalls = msg.toolCalls;\n    if (Array.isArray(toolCalls) && toolCalls[0]?.function?.name === 'transferCall') {\n      try {\n        const args = JSON.parse(toolCalls[0].function.arguments);\n        if (args.destination) {\n          lastDestination = args.destination;\n        }\n      } catch (e) {\n        // skip if parsing fails\n      }\n    }\n  }\n  return { destination: lastDestination };\n}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 619,
        "y": 715
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "body",
            "title": "Body (JSON string of data)",
            "type": "string",
            "required": false,
            "description": "Provide the JSON string of the object that contains message.artifact.messages",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "code",
            "title": "",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": {
                "lang": "",
                "prefix": "",
                "suffix": "",
                "fetchOn": []
              },
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "6839ebce27d1709e9f1ac921",
      "title": "Prepare Prompt Message Text",
      "description": "",
      "localId": "35",
      "typeId": "62cc22317ae28c026d256930",
      "params": [
        {
          "key": "messages_json",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "{{1.body.message.artifact.messages}}",
            "text": "{{1.body.message.artifact.messages}}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "code",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "/** @CustomParams\n{\n  \"messages_json\": {\n    \"title\": \"Messages JSON\",\n    \"key\": \"messages_json\",\n    \"description\": \"Provide the array of message objects (from 1.body.message.artifact.messages), as JSON string.\",\n    \"type\": \"string\"\n  }\n}\n*/\nexport default async function run({ data }) {\n  let messages;\n  try {\n    messages = JSON.parse(data.messages_json);\n  } catch (e) {\n    throw new Error('Invalid JSON for messages_json');\n  }\n\n  // Helper function\n  function notEmpty(val) {\n    return val !== undefined && val !== null && val !== '';\n  }\n\n  let result = '';\n  // Always output the first message (index 1) as per template\n  if (messages[1] && notEmpty(messages[1].role) && notEmpty(messages[1].message)) {\n    result += `${messages[1].role}: ${messages[1].message}\\n`;\n  }\n\n  // For 2, 3, 4\n  for (let i = 2; i <= 4; i++) {\n    if (\n      messages[i] &&\n      notEmpty(messages[i].message)\n    ) {\n      // jsonStringify(role: message)\n      result += `${messages[i].role + ': ' + messages[i].message}\\n`;\n    } else {\n      break;\n    }\n  }\n  // Trim trailing newline\n  return { prompt_message_text: result.trim() };\n}",
            "text": "/** @CustomParams\n{\n  \"messages_json\": {\n    \"title\": \"Messages JSON\",\n    \"key\": \"messages_json\",\n    \"description\": \"Provide the array of message objects (from 1.body.message.artifact.messages), as JSON string.\",\n    \"type\": \"string\"\n  }\n}\n*/\nexport default async function run({ data }) {\n  let messages;\n  try {\n    messages = JSON.parse(data.messages_json);\n  } catch (e) {\n    throw new Error('Invalid JSON for messages_json');\n  }\n\n  // Helper function\n  function notEmpty(val) {\n    return val !== undefined && val !== null && val !== '';\n  }\n\n  let result = '';\n  // Always output the first message (index 1) as per template\n  if (messages[1] && notEmpty(messages[1].role) && notEmpty(messages[1].message)) {\n    result += `${messages[1].role}: ${messages[1].message}\\n`;\n  }\n\n  // For 2, 3, 4\n  for (let i = 2; i <= 4; i++) {\n    if (\n      messages[i] &&\n      notEmpty(messages[i].message)\n    ) {\n      // jsonStringify(role: message)\n      result += `${messages[i].role + ': ' + messages[i].message}\\n`;\n    } else {\n      break;\n    }\n  }\n  // Trim trailing newline\n  return { prompt_message_text: result.trim() };\n}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 764,
        "y": 714
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "messages_json",
            "title": "Messages JSON",
            "type": "string",
            "required": false,
            "description": "Provide the array of message objects (from 1.body.message.artifact.messages), as JSON string.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "code",
            "title": "",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": {
                "lang": "",
                "prefix": "",
                "suffix": "",
                "fetchOn": []
              },
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "683a0bb0ffe5d69f609cc464",
      "title": "Analyze user's preferences",
      "description": "",
      "localId": "37",
      "typeId": "680b9ecfffbfa146fc84decd",
      "params": [
        {
          "key": "provider",
          "type": "select",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [
              "all providers"
            ],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "modality",
          "type": "select",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [
              "all modalities"
            ],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "isFree",
          "type": "select",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "model",
          "type": "select",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [
              "anthropic/claude-sonnet-4"
            ],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "userPrompt",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "Based on the following conversation between an AI assistant and a human user, extract relevant observations about the human user such as interests, hobbies, preferences, favorites or quirks. Be selective about information to extract. Ensure the information has relevance for future calls. Return the result in a JSON array structure like this. Return only the JSON object with no introductory phrases.\n{\n  \"observations\": {\n    \"hobbies\": [\"\", \"\"],\n    \"interests\": [\"\", \"\"],\n    \"preferences\": [\"\", \"\"],\n    \"quirks\": [\"\", \"\"],\n    \"favorites\": [\"\", \"\"]\n  }\n}\n\n\n{{1.body.message.artifact.messages}}",
            "text": "Based on the following conversation between an AI assistant and a human user, extract relevant observations about the human user such as interests, hobbies, preferences, favorites or quirks. Be selective about information to extract. Ensure the information has relevance for future calls. Return the result in a JSON array structure like this. Return only the JSON object with no introductory phrases.\n{\n  \"observations\": {\n    \"hobbies\": [\"\", \"\"],\n    \"interests\": [\"\", \"\"],\n    \"preferences\": [\"\", \"\"],\n    \"quirks\": [\"\", \"\"],\n    \"favorites\": [\"\", \"\"]\n  }\n}\n\n\n{{1.body.message.artifact.messages}}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "isAutoRouteSelected",
          "type": "bool",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "models",
          "type": "select",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [
              "openai/chatgpt-4o-latest"
            ],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "fileContent",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "dialogHistoryJSON",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "webSearch",
          "type": "bool",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "webSearchContextSize",
          "type": "select",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "maxTokens",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "temperature",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "seed",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "topP",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "1",
            "text": "1",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "topK",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "0",
            "text": "0",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "frequencyPenalty",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "0",
            "text": "0",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "presencePenalty",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "0",
            "text": "0",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "repetitionPenalty",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "1",
            "text": "1",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "stop",
          "type": "string_array",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "logitBias",
          "type": "string_to_string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "logprobs",
          "type": "select",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "topLogprobs",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "minP",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "0",
            "text": "0",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "topA",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "0",
            "text": "0",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "responseFormatJSON",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "toolsJSON",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "reasoningEffort",
          "type": "select",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "reasoningMaxTokens",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "reasoningExclude",
          "type": "select",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [
              "false"
            ],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "quick_preview_schema",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "{\"response\":\"result.choices[0].message.content\"}",
            "text": "{\"response\":\"result.choices[0].message.content\"}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 920,
        "y": 712
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "provider",
            "title": "Provider",
            "type": "select",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": {
                "options": [
                  {
                    "key": "all providers",
                    "value": "all providers"
                  }
                ],
                "multiple": false,
                "fetchOn": [],
                "withLabel": false,
                "type": "",
                "pagination": {
                  "page": 0,
                  "context": "",
                  "supported": true
                },
                "query": {
                  "value": "",
                  "supported": false
                }
              },
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [
                "OpenAI"
              ],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "modality",
            "title": "Input Modality",
            "type": "select",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": {
                "options": [
                  {
                    "key": "all modalities",
                    "value": "ALL MODALITIES"
                  }
                ],
                "multiple": false,
                "fetchOn": [],
                "withLabel": false,
                "type": "",
                "pagination": {
                  "page": 0,
                  "context": "",
                  "supported": false
                },
                "query": {
                  "value": "",
                  "supported": false
                }
              },
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [
                "all modalities"
              ],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "isFree",
            "title": "Payment Options",
            "type": "select",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": {
                "options": [],
                "multiple": false,
                "fetchOn": [],
                "withLabel": false,
                "type": "",
                "pagination": {
                  "page": 0,
                  "context": "",
                  "supported": false
                },
                "query": {
                  "value": "",
                  "supported": false
                }
              },
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "model",
            "title": "Model ID",
            "type": "select",
            "required": false,
            "description": "When the \"Model ID\" field is filled in, the \"Auto Router\" toggle is ignored. Either the \"Model ID\" field must be filled in, or the \"Auto Router\" toggle must be enabled.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": {
                "options": [
                  {
                    "key": "anthropic/claude-sonnet-4",
                    "value": "anthropic/claude-sonnet-4"
                  }
                ],
                "multiple": false,
                "fetchOn": [],
                "withLabel": false,
                "type": "",
                "pagination": {
                  "page": 0,
                  "context": "",
                  "supported": true
                },
                "query": {
                  "value": "",
                  "supported": false
                }
              },
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [
                "openai/gpt-4.1-nano"
              ],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "userPrompt",
            "title": "User Prompt",
            "type": "string",
            "required": false,
            "description": "Your new question prompt: please note that at least one of the \"User Prompt\", \"Dialogue History\"",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "Hello! Let's talk about the following: {query}",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "isAutoRouteSelected",
            "title": "Auto Router",
            "type": "bool",
            "required": false,
            "description": "Enables automatic selection of an alternative model from the \"Models Rerouting\" list. When disabled, the routing logic is skipped.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": true,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "models",
            "title": "Models Rerouting",
            "type": "select",
            "required": false,
            "description": "If the primary model's providers are down, rate-limited, or refuse to reply due to content moderation, then the chosen models will be used",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": {
                "options": [
                  {
                    "key": "openai/chatgpt-4o-latest",
                    "value": "openai/chatgpt-4o-latest"
                  }
                ],
                "multiple": true,
                "fetchOn": [],
                "withLabel": false,
                "type": "",
                "pagination": {
                  "page": 0,
                  "context": "",
                  "supported": true
                },
                "query": {
                  "value": "",
                  "supported": false
                }
              },
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "fileContent",
            "title": "File Content",
            "type": "string",
            "required": false,
            "description": "Enter a URL (e.g., https://example.png) or select file content from the data pop-up window (e.g., 1.body.files.[0].content)",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "dialogHistoryJSON",
            "title": "Dialog History JSON",
            "type": "string",
            "required": false,
            "description": "Valid JSON containing [the array of objects](https://openrouter.ai/docs/api-reference/chat-completion#request.body.messages), e.g. [{\"role\":\"user\",\"content\":\"Hello!\"}, {\"role\": \"assistant\", \"content\": \"Hi there! How can I help you today?\"}]  \n    role can be one of (**the roles should alternate**):  \n    system - the message author role is system;  \n    developer - an OpenAI specific role that replaces system in newer models;\n    user - the message author role is user;  \n    assistant - the message author role is assistant;  \n    tool - the message author role is tool.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "webSearch",
            "title": "Web Search",
            "type": "bool",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "webSearchContextSize",
            "title": "Search Context Size",
            "type": "select",
            "required": false,
            "description": "Amount of web content used to help the tool answer your question. Applies only to these [models](https://openrouter.ai/models?fmt=cards&supported_parameters=web_search_options).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": {
                "options": [],
                "multiple": false,
                "fetchOn": [],
                "withLabel": false,
                "type": "",
                "pagination": {
                  "page": 0,
                  "context": "",
                  "supported": false
                },
                "query": {
                  "value": "",
                  "supported": false
                }
              },
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "maxTokens",
            "title": "Max Tokens",
            "type": "string",
            "required": false,
            "description": "An upper bound for the number of tokens that can be generated for a completion, including visible output tokens and reasoning tokens.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "temperature",
            "title": "Temperature",
            "type": "string",
            "required": false,
            "description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. We generally recommend altering this or \"Top P\" but not both. [Read more](https://openrouter.ai/docs/api-reference/parameters#temperature).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "seed",
            "title": "Seed",
            "type": "string",
            "required": false,
            "description": "Repeated requests with the same seed and parameters return the same result. Determinism is not guaranteed for some models. [Read more](https://openrouter.ai/docs/api-reference/parameters#seed).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "topP",
            "title": "Top P",
            "type": "string",
            "required": false,
            "description": "Number between 0 and 1. An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with \"Top P\" probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered. We generally recommend altering this or \"Temperature\" but not both. [Read mode](https://openrouter.ai/docs/api-reference/parameters#top-p).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "1",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "topK",
            "title": "Top K",
            "type": "string",
            "required": false,
            "description": "Limits the model’s choice of tokens at each step, making it choose from a smaller set. [Read more](https://openrouter.ai/docs/api-reference/parameters#top-k).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "0",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "frequencyPenalty",
            "title": "Frequency Penalty",
            "type": "string",
            "required": false,
            "description": "Number between -2.0 and 2.0. Controlling the repetition of tokens based on how often they appear in the input. [Read more](https://openrouter.ai/docs/api-reference/parameters#frequency-penalty).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "0",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "presencePenalty",
            "title": "Presence Penalty",
            "type": "string",
            "required": false,
            "description": "Number between -2.0 and 2.0. Repeats specific tokens already used in the input. [Read more](https://openrouter.ai/docs/api-reference/parameters#presence-penalty).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "0",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "repetitionPenalty",
            "title": "Repetition Penalty",
            "type": "string",
            "required": false,
            "description": "Number between 0.0 and 2.0. Reduces the likelihood of the model repeating words or phrases. A higher value makes the output more varied by discouraging repetition. [Read more](https://openrouter.ai/docs/api-reference/parameters#repetition-penalty).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "1",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "stop",
            "title": "Stop Sequences",
            "type": "string_array",
            "required": false,
            "description": "Stop generation immediately if the model encounter any token specified in the stop array",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "logitBias",
            "title": "Logit Bias",
            "type": "string_to_string",
            "required": false,
            "description": "Adjusts the likelihood of specific tokens being selected by modifying their logits. Values range from -100 to 100. [Read more](https://openrouter.ai/docs/api-reference/parameters#logit-bias). For example: In the 'Key' field, enter \"-80\", in the 'Value' field, enter \"10\".",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "logprobs",
            "title": "Logprobs",
            "type": "select",
            "required": false,
            "description": "Whether to return log probabilities of the output tokens or not. If true, returns the log probabilities of each output token returned.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": {
                "options": [],
                "multiple": false,
                "fetchOn": [],
                "withLabel": false,
                "type": "",
                "pagination": {
                  "page": 0,
                  "context": "",
                  "supported": false
                },
                "query": {
                  "value": "",
                  "supported": false
                }
              },
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "topLogprobs",
            "title": "Top Logprobs",
            "type": "string",
            "required": false,
            "description": "Number of most likely tokens to return at each token position, each with an associated log probability",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "minP",
            "title": "Min P",
            "type": "string",
            "required": false,
            "description": "Minimum probability for a token to be considered, relative to the probability of the most likely token. [Read more](https://openrouter.ai/docs/api-reference/parameters#min-p).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "0",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "topA",
            "title": "Top A",
            "type": "string",
            "required": false,
            "description": "Consider only the top tokens with \"sufficiently high\" probabilities based on the probability of the most likely token. [Read more](https://openrouter.ai/docs/api-reference/parameters#top-a).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "0",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "responseFormatJSON",
            "title": "Response Format JSON",
            "type": "string",
            "required": false,
            "description": "For example: { \"type\": \"json_schema\", \"json_schema\": { \"name\": \"weather\", \"strict\": true, \"schema\": { \"type\": \"object\", \"properties\": { \"location\": { \"type\": \"string\", \"description\": \"City or location name\" }, \"temperature\": { \"type\": \"number\", \"description\": \"Temperature in Celsius\" }, \"conditions\": { \"type\": \"string\", \"description\": \"Weather conditions description\" } }, \"required\": [\"location\", \"temperature\", \"conditions\"], \"additionalProperties\": false } } }  \n    [Read more](https://openrouter.ai/docs/features/structured-outputs).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "toolsJSON",
            "title": "Tools JSON",
            "type": "string",
            "required": false,
            "description": "For example: [{\"type\":\"function\",\"function\":{\"name\":\"search_gutenberg_books\",\"description\":\"Search for books in the Project Gutenberg library based on specified search terms\",\"parameters\":{\"type\":\"object\",\"properties\":{\"search_terms\":{\"type\":\"array\",\"items\":{\"type\":\"string\"},\"description\":\"List of search terms to find books in the Gutenberg library (e.g. ['dickens', 'great'] to search for books by Dickens with 'great' in the title)\"}},\"required\":[\"search_terms\"]}}}]  \n    [Read more](https://openrouter.ai/docs/features/tool-calling).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "reasoningEffort",
            "title": "Reasoning Effort",
            "type": "select",
            "required": false,
            "description": "OpenAI-style reasoning effort setting",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": {
                "options": [],
                "multiple": false,
                "fetchOn": [],
                "withLabel": false,
                "type": "",
                "pagination": {
                  "page": 0,
                  "context": "",
                  "supported": false
                },
                "query": {
                  "value": "",
                  "supported": false
                }
              },
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "reasoningMaxTokens",
            "title": "Reasoning Max Tokens",
            "type": "string",
            "required": false,
            "description": "Non-OpenAI-style reasoning effort setting. Cannot be used simultaneously with effort.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "reasoningExclude",
            "title": "Reasoning Exclude",
            "type": "select",
            "required": false,
            "description": "Whether to exclude reasoning from the response",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": {
                "options": [
                  {
                    "key": "false",
                    "value": "FALSE"
                  }
                ],
                "multiple": false,
                "fetchOn": [],
                "withLabel": false,
                "type": "",
                "pagination": {
                  "page": 0,
                  "context": "",
                  "supported": false
                },
                "query": {
                  "value": "",
                  "supported": false
                }
              },
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [
                "false"
              ],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": {
          "environment": "",
          "isPd": true,
          "isJsn": true,
          "pdAvailableGetLastRecords": false
        },
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "683dc67911443f16554e0dd9",
      "title": "Get other voice agents",
      "description": "",
      "localId": "42",
      "typeId": "66bf657a22e621de86cbee7c",
      "params": [
        {
          "key": "storage_name",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "6d16c0c4-2139-45f6-a400-6f17e29229bb",
            "text": "6d16c0c4-2139-45f6-a400-6f17e29229bb",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "collection_name",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "generated_assistants",
            "text": "generated_assistants",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "filter",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "conditions:\n  - operation: and\n    conditions:\n      - operation: not_equal\n        query:\n          path: name\n        expected:\n          value: Claire\n      - operation: not_equal\n        query:\n          path: name\n        expected:\n          value: Alex",
            "text": "conditions:\n  - operation: and\n    conditions:\n      - operation: not_equal\n        query:\n          path: name\n        expected:\n          value: Claire\n      - operation: not_equal\n        query:\n          path: name\n        expected:\n          value: Alex",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "limit",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "offset",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 43,
        "y": -156
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "storage_name",
            "title": "Storage ID",
            "type": "text",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "collection_name",
            "title": "Collection name",
            "type": "text",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "filter",
            "title": "Filter",
            "type": "text",
            "required": false,
            "description": "Filter in YAML format. For details see [documentation](https://docs.latenode.com/docs/4eb52adf-0357-46a9-b85d-872b79ced50e/)",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "limit",
            "title": "Limit",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "offset",
            "title": "Offset",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "68450c85a45744f460b0e72d",
      "title": "Find customer",
      "description": "",
      "localId": "45",
      "typeId": "66bf657a22e621de86cbee7c",
      "params": [
        {
          "key": "storage_name",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "6d16c0c4-2139-45f6-a400-6f17e29229bb",
            "text": "6d16c0c4-2139-45f6-a400-6f17e29229bb",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "collection_name",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "user_info",
            "text": "user_info",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "filter",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "conditions:\n  - operation: equal\n    query:\n      path: phone_number\n    expected:\n      value: \"{{$1.body.message.customer.number}}\"",
            "text": "conditions:\n  - operation: equal\n    query:\n      path: phone_number\n    expected:\n      value: \"{{$1.body.message.customer.number}}\"",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "limit",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "offset",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 390,
        "y": 62
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "storage_name",
            "title": "Storage ID",
            "type": "text",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "collection_name",
            "title": "Collection name",
            "type": "text",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "filter",
            "title": "Filter",
            "type": "text",
            "required": false,
            "description": "Filter in YAML format. For details see [documentation](https://docs.latenode.com/docs/4eb52adf-0357-46a9-b85d-872b79ced50e/)",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "limit",
            "title": "Limit",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "offset",
            "title": "Offset",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "68450c85a45744f460b0e72e",
      "title": "Confirm user's first name",
      "description": "",
      "localId": "46",
      "typeId": "62cc22317ae28c026d25692f",
      "params": [
        {
          "key": "body",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "{\n    \"type\": \"say\",\n    \"content\": \"I didn't catch your name. What's your name?\",\n    \"endCallAfterSpoken\": false\n}",
            "text": "{\n    \"type\": \"say\",\n    \"content\": \"I didn't catch your name. What's your name?\",\n    \"endCallAfterSpoken\": false\n}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "url",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "{{1.body.message.call.monitor.controlUrl}}",
            "text": "{{1.body.message.call.monitor.controlUrl}}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "method",
          "type": "select",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [
              "POST"
            ],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "post_params",
          "type": "string_to_string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "headers",
          "type": "string_to_string",
          "value": {
            "stringToString": [
              {
                "key": "content-type",
                "value": "application/json"
              }
            ],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "post_params_urlencoded",
          "type": "string_to_string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "basic_auth_username",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "basic_auth_password",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "digest_auth_username",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "digest_auth_password",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "ntlm_auth_username",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "ntlm_auth_password",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "ntlm_auth_domain",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "hide_all",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "http_proxy_address",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "http_proxy_login",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "http_proxy_password",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 940,
        "y": 64
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "body",
            "title": "Body",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "url",
            "title": "Url",
            "type": "string",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "method",
            "title": "Http method",
            "type": "select",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": {
                "options": [
                  {
                    "key": "POST",
                    "value": "POST"
                  }
                ],
                "multiple": false,
                "fetchOn": [],
                "withLabel": false,
                "type": "",
                "pagination": {
                  "page": 0,
                  "context": "",
                  "supported": false
                },
                "query": {
                  "value": "",
                  "supported": false
                }
              },
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [
                "GET"
              ],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "post_params",
            "title": "POST params",
            "type": "string_to_string",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "headers",
            "title": "Http headers",
            "type": "string_to_string",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "post_params_urlencoded",
            "title": "x-www-form-urlencoded",
            "type": "string_to_string",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "basic_auth_username",
            "title": "Basic Auth Username",
            "type": "string",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "basic_auth_password",
            "title": "Basic Auth Password",
            "type": "string",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "digest_auth_username",
            "title": "Digest Auth Username",
            "type": "string",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "digest_auth_password",
            "title": "Digest Auth Password",
            "type": "string",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "ntlm_auth_username",
            "title": "NTLM Auth Username",
            "type": "string",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "ntlm_auth_password",
            "title": "NTLM Auth Password",
            "type": "string",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "ntlm_auth_domain",
            "title": "NTLM Auth Domain",
            "type": "string",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "hide_all",
            "title": "Hide All",
            "type": "string",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "http_proxy_address",
            "title": "Proxy Address",
            "type": "string",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "http_proxy_login",
            "title": "Proxy Login",
            "type": "string",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "http_proxy_password",
            "title": "Proxy Password",
            "type": "string",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    }
  ],
  "gateways": [
    {
      "nodeId": "6837b01955973d8d653ac306",
      "localNodeId": "",
      "routes": [
        {
          "condition": {
            "type": "",
            "expression": {
              "value": ""
            }
          },
          "label": "",
          "nodeId": "6837b01955973d8d653ac307",
          "localNodeId": "",
          "isFallback": true,
          "purpose": "input"
        },
        {
          "condition": {
            "type": "",
            "expression": {
              "value": "{{1.body.message.call.status = \"ringing\" and 1.body.message.type = \"assistant-request\"}}"
            }
          },
          "label": "1. assistant request",
          "nodeId": "683889b148cc01db735b445b",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        },
        {
          "condition": {
            "type": "",
            "expression": {
              "value": "{{1.body.message.type = \"status-update\" and 1.body.message.status = \"in-progress\"}}"
            }
          },
          "label": "2. call initiated",
          "nodeId": "68387eea8e5e5fae9df38666",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        },
        {
          "condition": {
            "type": "",
            "expression": {
              "value": "{{1.body.message.type = \"end-of-call-report\"}}"
            }
          },
          "label": "end of call report with summary",
          "nodeId": "6838b37041684832b462190f",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        },
        {
          "condition": {
            "type": "",
            "expression": {
              "value": "{{1.body.message.type = \"transfer-destination-request\"}}"
            }
          },
          "label": "transfer request",
          "nodeId": "6838d2e9a68f16d255ebf474",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        },
        {
          "condition": {
            "type": "",
            "expression": {
              "value": "{{1.body.message.call.status = \"ringing\" and 1.body.message.type = \"assistant-request\"}}"
            }
          },
          "label": "1. assistant request",
          "nodeId": "683dc67911443f16554e0dd9",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        }
      ],
      "name": "",
      "purpose": "output"
    },
    {
      "nodeId": "68387bcba68f16d255ebef99",
      "localNodeId": "",
      "routes": [
        {
          "condition": {
            "type": "",
            "expression": {
              "value": ""
            }
          },
          "label": "",
          "nodeId": "68387d0341684832b46215ea",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        }
      ],
      "name": "",
      "purpose": "output"
    },
    {
      "nodeId": "683889b148cc01db735b445b",
      "localNodeId": "",
      "routes": [
        {
          "condition": {
            "type": "",
            "expression": {
              "value": "{{not(empty(8.result)) and not(empty(8.result.[0].value.first_name))}}"
            }
          },
          "label": "customer(s) found",
          "nodeId": "68387bcba68f16d255ebef99",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        },
        {
          "condition": {
            "type": "",
            "expression": {
              "value": ""
            }
          },
          "label": "",
          "nodeId": "6838939c41684832b46217b9",
          "localNodeId": "",
          "isFallback": true,
          "purpose": "input"
        }
      ],
      "name": "",
      "purpose": "output"
    },
    {
      "nodeId": "6838939c41684832b46217b9",
      "localNodeId": "",
      "routes": [
        {
          "condition": {
            "type": "",
            "expression": {
              "value": ""
            }
          },
          "label": "",
          "nodeId": "6838939c41684832b46217ba",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        }
      ],
      "name": "",
      "purpose": "output"
    },
    {
      "nodeId": "68389d6c9a7b3e043f97cc7c",
      "localNodeId": "",
      "routes": [
        {
          "condition": {
            "type": "",
            "expression": {
              "value": ""
            }
          },
          "label": "",
          "nodeId": "6838a17d9a7b3e043f97cc9b",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        },
        {
          "condition": {
            "type": "",
            "expression": {
              "value": ""
            }
          },
          "label": "",
          "nodeId": "68450c85a45744f460b0e72e",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        }
      ],
      "name": "",
      "purpose": "output"
    },
    {
      "nodeId": "6838a0ba482cccbbaec76ab9",
      "localNodeId": "",
      "routes": [
        {
          "condition": {
            "type": "",
            "expression": {
              "value": ""
            }
          },
          "label": "",
          "nodeId": "68389d6c9a7b3e043f97cc7c",
          "localNodeId": "",
          "isFallback": true,
          "purpose": "input"
        },
        {
          "condition": {
            "type": "",
            "expression": {
              "value": "{{not(empty(16.result))}}"
            }
          },
          "label": "phone number previously searched",
          "nodeId": "68450c85a45744f460b0e72e",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        }
      ],
      "name": "",
      "purpose": "output"
    },
    {
      "nodeId": "68393c1241684832b4621c25",
      "localNodeId": "",
      "routes": [
        {
          "condition": {
            "type": "",
            "expression": {
              "value": "{{empty(26.result) or (not(empty(26.result)) and empty(26.result.first_name))}}"
            }
          },
          "label": "customer missing or firstname missing",
          "nodeId": "6839e1ccffe5d69f609cc2eb",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        }
      ],
      "name": "",
      "purpose": "output"
    },
    {
      "nodeId": "6839e1ccffe5d69f609cc2eb",
      "localNodeId": "",
      "routes": [
        {
          "condition": {
            "type": "",
            "expression": {
              "value": ""
            }
          },
          "label": "",
          "nodeId": "6839ebce27d1709e9f1ac921",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        }
      ],
      "name": "",
      "purpose": "output"
    },
    {
      "nodeId": "6839ebce27d1709e9f1ac921",
      "localNodeId": "",
      "routes": [
        {
          "condition": {
            "type": "",
            "expression": {
              "value": ""
            }
          },
          "label": "",
          "nodeId": "683a0bb0ffe5d69f609cc464",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        }
      ],
      "name": "",
      "purpose": "output"
    },
    {
      "nodeId": "6838b37041684832b462190f",
      "localNodeId": "",
      "routes": [
        {
          "condition": {
            "type": "",
            "expression": {
              "value": ""
            }
          },
          "label": "",
          "nodeId": "6839d6cb4f57a37c78923472",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        }
      ],
      "name": "",
      "purpose": "output"
    },
    {
      "nodeId": "6839d6cb4f57a37c78923472",
      "localNodeId": "",
      "routes": [
        {
          "condition": {
            "type": "",
            "expression": {
              "value": ""
            }
          },
          "label": "",
          "nodeId": "68393c1241684832b4621c25",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        }
      ],
      "name": "",
      "purpose": "output"
    },
    {
      "nodeId": "683a0bb0ffe5d69f609cc464",
      "localNodeId": "",
      "routes": [
        {
          "condition": {
            "type": "",
            "expression": {
              "value": ""
            }
          },
          "label": "",
          "nodeId": "6838bd4f8e5e5fae9df38bd1",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        }
      ],
      "name": "",
      "purpose": "output"
    },
    {
      "nodeId": "683dc67911443f16554e0dd9",
      "localNodeId": "",
      "routes": [
        {
          "condition": {
            "type": "",
            "expression": {
              "value": ""
            }
          },
          "label": "",
          "nodeId": "683889b148cc01db735b445b",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        }
      ],
      "name": "",
      "purpose": "output"
    },
    {
      "nodeId": "68387eea8e5e5fae9df38666",
      "localNodeId": "",
      "routes": [
        {
          "condition": {
            "type": "",
            "expression": {
              "value": "{{not(empty(1.body.message.call.monitor.controlUrl))}}"
            }
          },
          "label": "control url exists",
          "nodeId": "68450c85a45744f460b0e72d",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        }
      ],
      "name": "",
      "purpose": "output"
    },
    {
      "nodeId": "68450c85a45744f460b0e72d",
      "localNodeId": "",
      "routes": [
        {
          "condition": {
            "type": "",
            "expression": {
              "value": "{{empty(45.result) or empty(45.result.[0].value.first_name)}}"
            }
          },
          "label": "not found",
          "nodeId": "6838a0ba482cccbbaec76ab9",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        }
      ],
      "name": "",
      "purpose": "output"
    }
  ],
  "version": "319",
  "tags": [],
  "release": true,
  "latestLocalNodeId": "47",
  "environments": [
    {
      "id": "6837b003ddbd2cd569415677",
      "alias": "prod",
      "name": "Prod",
      "actualVersion": "319",
      "isActive": true
    },
    {
      "id": "6837b003ddbd2cd569415678",
      "alias": "dev",
      "name": "Dev",
      "actualVersion": "319",
      "isActive": true
    }
  ],
  "nodulInfo": {
    "isNodul": false,
    "isPublic": false,
    "isCodul": false
  },
  "readOnly": false,
  "executionBucket": "execution_bucket_default",
  "isUsersPublic": false
}
