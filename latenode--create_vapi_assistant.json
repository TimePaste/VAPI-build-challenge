{
  "id": "683bdec9d7a848642232fd64",
  "folderId": "6832329bee92a3567bbb30f3",
  "title": "Create VAPI Assistant",
  "description": "",
  "nodes": [
    {
      "id": "683be118cc9ed75e19ff8745",
      "title": "",
      "description": "",
      "localId": "1",
      "typeId": "62cc22317ae28c026d25692d",
      "params": [
        {
          "key": "path",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "d8f84042-874e-444a-8c94-e9ca7157aace",
            "text": "d8f84042-874e-444a-8c94-e9ca7157aace",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": -581,
        "y": 132
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "683be118cc9ed75e19ff8746",
      "title": "",
      "description": "",
      "localId": "2",
      "typeId": "62cc22317ae28c026d25692e",
      "params": [
        {
          "key": "status",
          "type": "int",
          "value": {
            "stringToString": [],
            "int": "200",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "headers",
          "type": "string_to_string",
          "value": {
            "stringToString": [
              {
                "key": "content-type",
                "value": "application/json"
              }
            ],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "body",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "{\"status\": \"Success\", \"message': \"The request was successfully submitted to the boss. Call back in a few minutes to chat with the new hire!\"}",
            "text": "{\"status\": \"Success\", \"message': \"The request was successfully submitted to the boss. Call back in a few minutes to chat with the new hire!\"}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": -158,
        "y": -52
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "status",
            "title": "Код ответа",
            "type": "int",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": {
                "max": 599,
                "min": 200,
                "fetchOn": []
              },
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "200",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "headers",
            "title": "Заголовки ответа",
            "type": "string_to_string",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": {
                "maxCount": 0,
                "fixedSize": false,
                "fetchOn": [],
                "allowEmpty": false
              },
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [
                {
                  "key": "content-type",
                  "value": "application/json"
                }
              ],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "body",
            "title": "Тело ответа",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "683be118cc9ed75e19ff8747",
      "title": "Post VAPI Assistant",
      "description": "",
      "localId": "4",
      "typeId": "62cc22317ae28c026d256930",
      "params": [
        {
          "key": "api_key",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "...",
            "text": "...",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "code",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "/** @CustomParams\n{\n\t\"api_key\": {\n\t\t\"type\": \"string\",\n\t\t\"title\": \"API Key\",\n\t\t\"description\": \"Your API key for Vapi AI\"\n\t}\n}\n*/\n\nimport axios from \"axios\";\n\nexport default async function run({ execution_id, input, data }) {\n\tconst firstMessage = data[\"{{$13.result.choices.[0].message.content}}\"] || `Hello! This is ${data[\"{{$1.body.name}}\"]}. How can I help you?`;\n\ttry {\n\t\tconst response = await axios.post(\n\t\t\t\"https://api.vapi.ai/assistant\",\n\t\t\t{\n\t\t\t\t\"name\": data[\"{{1.body.message.toolCalls.[0].function.arguments.name}}\"],\n\t\t\t\t\"firstMessage\": firstMessage,\n\t\t\t\t\"voice\": {\n\t\t\t\t\t\"model\": \"eleven_flash_v2\",\n\t\t\t\t\t\"provider\": \"11labs\",\n\t\t\t\t\t\"voiceId\": data[\"{{$9.recommendedVoiceID}}\"],\n\t\t\t\t\t\"inputPunctuationBoundaries\": [\n\t\t\t\t\t\t\":\",\n\t\t\t\t\t\t\"||\",\n\t\t\t\t\t\t\"|\",\n\t\t\t\t\t\t\"॥\",\n\t\t\t\t\t\t\"।\",\n\t\t\t\t\t\t\"۔\",\n\t\t\t\t\t\t\"،\",\n\t\t\t\t\t\t\")\",\n\t\t\t\t\t\t\";\",\n\t\t\t\t\t\t\"!\",\n\t\t\t\t\t\t\"?\",\n\t\t\t\t\t\t\".\",\n\t\t\t\t\t\t\"。\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"model\": {\n\t\t\t\t\t\"model\": \"gpt-4o-mini\",\n\t\t\t\t\t\"toolIds\": [\n\t\t\t\t\t\t\"c132952c-d9db-4d28-b78d-690063462f3d\",\n\t\t\t\t\t\t\"01877bf5-384b-47ed-b7c2-d060bf9c9b79\",\n\t\t\t\t\t\t\"d0cc0f0c-fc81-480d-9f13-268299214351\",\n\t\t\t\t\t\t\"ce3c3b80-6417-48b1-b65e-b61a1afb4a69\",\n\t\t\t\t\t\t\"24f8d1b4-d4d8-49f8-aad8-8765425da904\",\n\t\t\t\t\t\t\"21fda4d6-e9a9-4c82-8699-e9e11041f532\"\n\t\t\t\t\t],\n\t\t\t\t\t\"messages\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"role\": \"system\",\n\t\t\t\t\t\t\t\"content\": data[\"{{$10.result.choices.[0].message.content}}\"]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"provider\": \"openai\",\n\t\t\t\t\t\"maxTokens\": 500\n\t\t\t\t},\n\t\t\t\t\"transcriber\": {\n\t\t\t\t\t\"model\": \"nova-3\",\n\t\t\t\t\t\"language\": \"en-US\",\n\t\t\t\t\t\"provider\": \"deepgram\"\n\t\t\t\t},\n\t\t\t\t\"startSpeakingPlan\": {\n\t\t\t\t\t\"waitSeconds\": 0.4,\n\t\t\t\t\t\"smartEndpointingPlan\": {\n\t\t\t\t\t\t\"provider\": \"vapi\"\n\t\t\t\t\t},\n\t\t\t\t\t\"customEndpointingRules\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"assistant\",\n\t\t\t\t\t\t\t\"regex\": \"regex\",\n\t\t\t\t\t\t\t\"timeoutSeconds\": 1.1\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"transcriptionEndpointingPlan\": {\n\t\t\t\t\t\t\"onPunctuationSeconds\": 0.1,\n\t\t\t\t\t\t\"onNoPunctuationSeconds\": 1.5,\n\t\t\t\t\t\t\"onNumberSeconds\": 0.5\n\t\t\t\t\t},\n\t\t\t\t\t\"smartEndpointingEnabled\": true\n\t\t\t\t},\n\t\t\t\t\"stopSpeakingPlan\": {\n\t\t\t\t\t\"numWords\": 0,\n\t\t\t\t\t\"voiceSeconds\": 0.2,\n\t\t\t\t\t\"backoffSeconds\": 1,\n\t\t\t\t\t\"acknowledgementPhrases\": [\n\t\t\t\t\t\t\"i understand\",\n\t\t\t\t\t\t\"i see\",\n\t\t\t\t\t\t\"i got it\",\n\t\t\t\t\t\t\"i hear you\",\n\t\t\t\t\t\t\"im listening\",\n\t\t\t\t\t\t\"im with you\",\n\t\t\t\t\t\t\"right\",\n\t\t\t\t\t\t\"okay\",\n\t\t\t\t\t\t\"ok\",\n\t\t\t\t\t\t\"sure\",\n\t\t\t\t\t\t\"alright\",\n\t\t\t\t\t\t\"got it\",\n\t\t\t\t\t\t\"understood\",\n\t\t\t\t\t\t\"yeah\",\n\t\t\t\t\t\t\"yes\",\n\t\t\t\t\t\t\"uh-huh\",\n\t\t\t\t\t\t\"mm-hmm\",\n\t\t\t\t\t\t\"gotcha\",\n\t\t\t\t\t\t\"mhmm\",\n\t\t\t\t\t\t\"ah\",\n\t\t\t\t\t\t\"yeah okay\",\n\t\t\t\t\t\t\"yeah sure\"\n\t\t\t\t\t],\n\t\t\t\t\t\"interruptionPhrases\": [\n\t\t\t\t\t\t\"stop\",\n\t\t\t\t\t\t\"shut\",\n\t\t\t\t\t\t\"up\",\n\t\t\t\t\t\t\"enough\",\n\t\t\t\t\t\t\"quiet\",\n\t\t\t\t\t\t\"silence\",\n\t\t\t\t\t\t\"but\",\n\t\t\t\t\t\t\"dont\",\n\t\t\t\t\t\t\"not\",\n\t\t\t\t\t\t\"no\",\n\t\t\t\t\t\t\"hold\",\n\t\t\t\t\t\t\"wait\",\n\t\t\t\t\t\t\"cut\",\n\t\t\t\t\t\t\"pause\",\n\t\t\t\t\t\t\"nope\",\n\t\t\t\t\t\t\"nah\",\n\t\t\t\t\t\t\"nevermind\",\n\t\t\t\t\t\t\"never\",\n\t\t\t\t\t\t\"bad\",\n\t\t\t\t\t\t\"actually\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\t\"Authorization\": `Bearer ${data.api_key}`,\n\t\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\treturn {\n\t\t\tstatus: response.status,\n\t\t\tdata: response.data\n\t\t};\n\t} catch (error) {\n\t\treturn {\n\t\t\terror: error.response ? error.response.data : error.message\n\t\t};\n\t}\n}",
            "text": "/** @CustomParams\n{\n\t\"api_key\": {\n\t\t\"type\": \"string\",\n\t\t\"title\": \"API Key\",\n\t\t\"description\": \"Your API key for Vapi AI\"\n\t}\n}\n*/\n\nimport axios from \"axios\";\n\nexport default async function run({ execution_id, input, data }) {\n\tconst firstMessage = data[\"{{$13.result.choices.[0].message.content}}\"] || `Hello! This is ${data[\"{{$1.body.name}}\"]}. How can I help you?`;\n\ttry {\n\t\tconst response = await axios.post(\n\t\t\t\"https://api.vapi.ai/assistant\",\n\t\t\t{\n\t\t\t\t\"name\": data[\"{{1.body.message.toolCalls.[0].function.arguments.name}}\"],\n\t\t\t\t\"firstMessage\": firstMessage,\n\t\t\t\t\"voice\": {\n\t\t\t\t\t\"model\": \"eleven_flash_v2\",\n\t\t\t\t\t\"provider\": \"11labs\",\n\t\t\t\t\t\"voiceId\": data[\"{{$9.recommendedVoiceID}}\"],\n\t\t\t\t\t\"inputPunctuationBoundaries\": [\n\t\t\t\t\t\t\":\",\n\t\t\t\t\t\t\"||\",\n\t\t\t\t\t\t\"|\",\n\t\t\t\t\t\t\"॥\",\n\t\t\t\t\t\t\"।\",\n\t\t\t\t\t\t\"۔\",\n\t\t\t\t\t\t\"،\",\n\t\t\t\t\t\t\")\",\n\t\t\t\t\t\t\";\",\n\t\t\t\t\t\t\"!\",\n\t\t\t\t\t\t\"?\",\n\t\t\t\t\t\t\".\",\n\t\t\t\t\t\t\"。\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"model\": {\n\t\t\t\t\t\"model\": \"gpt-4o-mini\",\n\t\t\t\t\t\"toolIds\": [\n\t\t\t\t\t\t\"c132952c-d9db-4d28-b78d-690063462f3d\",\n\t\t\t\t\t\t\"01877bf5-384b-47ed-b7c2-d060bf9c9b79\",\n\t\t\t\t\t\t\"d0cc0f0c-fc81-480d-9f13-268299214351\",\n\t\t\t\t\t\t\"ce3c3b80-6417-48b1-b65e-b61a1afb4a69\",\n\t\t\t\t\t\t\"24f8d1b4-d4d8-49f8-aad8-8765425da904\",\n\t\t\t\t\t\t\"21fda4d6-e9a9-4c82-8699-e9e11041f532\"\n\t\t\t\t\t],\n\t\t\t\t\t\"messages\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"role\": \"system\",\n\t\t\t\t\t\t\t\"content\": data[\"{{$10.result.choices.[0].message.content}}\"]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"provider\": \"openai\",\n\t\t\t\t\t\"maxTokens\": 500\n\t\t\t\t},\n\t\t\t\t\"transcriber\": {\n\t\t\t\t\t\"model\": \"nova-3\",\n\t\t\t\t\t\"language\": \"en-US\",\n\t\t\t\t\t\"provider\": \"deepgram\"\n\t\t\t\t},\n\t\t\t\t\"startSpeakingPlan\": {\n\t\t\t\t\t\"waitSeconds\": 0.4,\n\t\t\t\t\t\"smartEndpointingPlan\": {\n\t\t\t\t\t\t\"provider\": \"vapi\"\n\t\t\t\t\t},\n\t\t\t\t\t\"customEndpointingRules\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"assistant\",\n\t\t\t\t\t\t\t\"regex\": \"regex\",\n\t\t\t\t\t\t\t\"timeoutSeconds\": 1.1\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"transcriptionEndpointingPlan\": {\n\t\t\t\t\t\t\"onPunctuationSeconds\": 0.1,\n\t\t\t\t\t\t\"onNoPunctuationSeconds\": 1.5,\n\t\t\t\t\t\t\"onNumberSeconds\": 0.5\n\t\t\t\t\t},\n\t\t\t\t\t\"smartEndpointingEnabled\": true\n\t\t\t\t},\n\t\t\t\t\"stopSpeakingPlan\": {\n\t\t\t\t\t\"numWords\": 0,\n\t\t\t\t\t\"voiceSeconds\": 0.2,\n\t\t\t\t\t\"backoffSeconds\": 1,\n\t\t\t\t\t\"acknowledgementPhrases\": [\n\t\t\t\t\t\t\"i understand\",\n\t\t\t\t\t\t\"i see\",\n\t\t\t\t\t\t\"i got it\",\n\t\t\t\t\t\t\"i hear you\",\n\t\t\t\t\t\t\"im listening\",\n\t\t\t\t\t\t\"im with you\",\n\t\t\t\t\t\t\"right\",\n\t\t\t\t\t\t\"okay\",\n\t\t\t\t\t\t\"ok\",\n\t\t\t\t\t\t\"sure\",\n\t\t\t\t\t\t\"alright\",\n\t\t\t\t\t\t\"got it\",\n\t\t\t\t\t\t\"understood\",\n\t\t\t\t\t\t\"yeah\",\n\t\t\t\t\t\t\"yes\",\n\t\t\t\t\t\t\"uh-huh\",\n\t\t\t\t\t\t\"mm-hmm\",\n\t\t\t\t\t\t\"gotcha\",\n\t\t\t\t\t\t\"mhmm\",\n\t\t\t\t\t\t\"ah\",\n\t\t\t\t\t\t\"yeah okay\",\n\t\t\t\t\t\t\"yeah sure\"\n\t\t\t\t\t],\n\t\t\t\t\t\"interruptionPhrases\": [\n\t\t\t\t\t\t\"stop\",\n\t\t\t\t\t\t\"shut\",\n\t\t\t\t\t\t\"up\",\n\t\t\t\t\t\t\"enough\",\n\t\t\t\t\t\t\"quiet\",\n\t\t\t\t\t\t\"silence\",\n\t\t\t\t\t\t\"but\",\n\t\t\t\t\t\t\"dont\",\n\t\t\t\t\t\t\"not\",\n\t\t\t\t\t\t\"no\",\n\t\t\t\t\t\t\"hold\",\n\t\t\t\t\t\t\"wait\",\n\t\t\t\t\t\t\"cut\",\n\t\t\t\t\t\t\"pause\",\n\t\t\t\t\t\t\"nope\",\n\t\t\t\t\t\t\"nah\",\n\t\t\t\t\t\t\"nevermind\",\n\t\t\t\t\t\t\"never\",\n\t\t\t\t\t\t\"bad\",\n\t\t\t\t\t\t\"actually\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\t\"Authorization\": `Bearer ${data.api_key}`,\n\t\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\treturn {\n\t\t\tstatus: response.status,\n\t\t\tdata: response.data\n\t\t};\n\t} catch (error) {\n\t\treturn {\n\t\t\terror: error.response ? error.response.data : error.message\n\t\t};\n\t}\n}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 904,
        "y": 124
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "api_key",
            "title": "API Key",
            "type": "string",
            "required": false,
            "description": "Your API key for Vapi AI",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "code",
            "title": "",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": {
                "lang": "",
                "prefix": "",
                "suffix": "",
                "fetchOn": []
              },
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "683be79327d1709e9f1ad3c2",
      "title": "Get Voices from DB",
      "description": "",
      "localId": "6",
      "typeId": "62cc22317ae28c026d256930",
      "params": [
        {
          "key": "database_id",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "6d16c0c4-2139-45f6-a400-6f17e29229bb",
            "text": "6d16c0c4-2139-45f6-a400-6f17e29229bb",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "collection_name",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "11labs_voices",
            "text": "11labs_voices",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "code",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "/** @CustomParams\n{\n\t\"database_id\": {\n\t\t\"type\": \"string\",\n\t\t\"title\": \"Database ID\",\n\t\t\"description\": \"The ID of the database to connect to\"\n\t},\n\t\"collection_name\": {\n\t\t\"type\": \"string\",\n\t\t\"title\": \"Collection Name\",\n\t\t\"description\": \"The name of the collection to search in\"\n\t}\n}\n*/\n\nexport default async function run({ execution_id, input, data, db, store }) {\n\tconst database_id = data.database_id;\n\tconst collection_name = data.collection_name;\n\n\tconst database = db.database(database_id);\n\tconst collection = database.collection(collection_name);\n\n\tconst limit = 100;\n\tlet offset = 0;\n\tlet allObjects = [];\n\tlet keepGoing = true;\n\n\twhile (keepGoing) {\n\t\tconst objects = await collection.findObjects(limit, offset);\n\n\t\tif (objects.length === 0) {\n\t\t\tkeepGoing = false;\n\t\t} else {\n\t\t\tallObjects = allObjects.concat(objects);\n\t\t\toffset += objects.length;\n\t\t\tif (objects.length < limit) {\n\t\t\t\tkeepGoing = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tconst filteredList = allObjects.map(storageItem => {\n\t\treturn {\n\t\t\tlabels: storageItem.value.labels,\n\t\t\tname: storageItem.value.name,\n\t\t\tvoice_id: storageItem.value.voice_id,\n\t\t\tdescription: storageItem.value.description\n\t\t};\n\t});\n\n\treturn {\n\t\tstatus: 'Success',\n\t\tobjects: filteredList\n\t}\n}",
            "text": "/** @CustomParams\n{\n\t\"database_id\": {\n\t\t\"type\": \"string\",\n\t\t\"title\": \"Database ID\",\n\t\t\"description\": \"The ID of the database to connect to\"\n\t},\n\t\"collection_name\": {\n\t\t\"type\": \"string\",\n\t\t\"title\": \"Collection Name\",\n\t\t\"description\": \"The name of the collection to search in\"\n\t}\n}\n*/\n\nexport default async function run({ execution_id, input, data, db, store }) {\n\tconst database_id = data.database_id;\n\tconst collection_name = data.collection_name;\n\n\tconst database = db.database(database_id);\n\tconst collection = database.collection(collection_name);\n\n\tconst limit = 100;\n\tlet offset = 0;\n\tlet allObjects = [];\n\tlet keepGoing = true;\n\n\twhile (keepGoing) {\n\t\tconst objects = await collection.findObjects(limit, offset);\n\n\t\tif (objects.length === 0) {\n\t\t\tkeepGoing = false;\n\t\t} else {\n\t\t\tallObjects = allObjects.concat(objects);\n\t\t\toffset += objects.length;\n\t\t\tif (objects.length < limit) {\n\t\t\t\tkeepGoing = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tconst filteredList = allObjects.map(storageItem => {\n\t\treturn {\n\t\t\tlabels: storageItem.value.labels,\n\t\t\tname: storageItem.value.name,\n\t\t\tvoice_id: storageItem.value.voice_id,\n\t\t\tdescription: storageItem.value.description\n\t\t};\n\t});\n\n\treturn {\n\t\tstatus: 'Success',\n\t\tobjects: filteredList\n\t}\n}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 192,
        "y": 164
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "database_id",
            "title": "Database ID",
            "type": "string",
            "required": false,
            "description": "The ID of the database to connect to",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "collection_name",
            "title": "Collection Name",
            "type": "string",
            "required": false,
            "description": "The name of the collection to search in",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "code",
            "title": "",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": {
                "lang": "",
                "prefix": "",
                "suffix": "",
                "fetchOn": []
              },
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "683beccf4f57a37c789240f5",
      "title": "Determine voice model",
      "description": "",
      "localId": "8",
      "typeId": "6671bec0aef6a13317a71a89",
      "params": [
        {
          "key": "ModelIdProp",
          "type": "select",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [
              "gemini-2.5-flash-preview-04-17"
            ],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "ContentsSimpleTextPromptProp",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "User's description:\n{{1.body.message.toolCalls.[0].function.arguments}}\n\nSystem instructions:\nFrom the following list of voices, determine the voice ID of the most appropriate match according to the attributes mentioned by the user. Return **ONLY** the voice ID with no introductory phrases or explanation in JSON format like {\"voice_id\":\"\"}\n{{$6.objects}}\n",
            "text": "User's description:\n{{1.body.message.toolCalls.[0].function.arguments}}\n\nSystem instructions:\nFrom the following list of voices, determine the voice ID of the most appropriate match according to the attributes mentioned by the user. Return **ONLY** the voice ID with no introductory phrases or explanation in JSON format like {\"voice_id\":\"\"}\n{{$6.objects}}\n",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "GenerationContentsChatHistoryProp",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "FileMimeTypeProp",
          "type": "select",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "FilePathGenericProp",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "RegionProp",
          "type": "select",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "systemInstruction",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "safetySettings",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "GenerationConfigMaxOutputTokensProp",
          "type": "int",
          "value": {
            "stringToString": [],
            "int": "8192",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "GenerationConfigTemperatureProp",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "GenerationConfigResponseSchemaProp",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "GenerationConfigStopSequencesProp",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "generationConfigCandidateCount",
          "type": "int",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "GenerationConfigTopKProp",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "GenerationConfigTopPProp",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "FunctionCallingFunctionDeclarationsJsonProp",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "FunctionCallingResponseFunctionNameProp",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "FunctionCallingResponseContentJsonProp",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "FunctionCallingFunctionDeclarationsConfigModeProp",
          "type": "select",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "FunctionCallingFunctionDeclarationsConfigFunctionNamesProp",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "quick_preview_schema",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "{\"response\":\"result.response.candidates[0].content.parts[0].text\"}",
            "text": "{\"response\":\"result.response.candidates[0].content.parts[0].text\"}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 452,
        "y": 62
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "ModelIdProp",
            "title": "Model",
            "type": "select",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": {
                "options": [
                  {
                    "key": "gemini-2.5-flash-preview-04-17",
                    "value": "gemini-2.5-flash-preview-04-17"
                  }
                ],
                "multiple": false,
                "fetchOn": [],
                "withLabel": false,
                "type": "",
                "pagination": {
                  "page": 0,
                  "context": "",
                  "supported": true
                },
                "query": {
                  "value": "",
                  "supported": false
                }
              },
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [
                "gemini-2.0-flash-lite"
              ],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "ContentsSimpleTextPromptProp",
            "title": "Prompt",
            "type": "string",
            "required": false,
            "description": "At least one of the \"Prompt\" or \"Contents - Chat History JSON\" fields must be filled in",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "Hello! Let's talk about the following: {query}",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "GenerationContentsChatHistoryProp",
            "title": "Contents - Chat History JSON",
            "type": "string",
            "required": false,
            "description": "Input chat history. It must be an array of [Content](https://cloud.google.com/vertex-ai/generative-ai/docs/model-reference/inference#content ) objects. Please note that at least one of the \"Prompt\" or \"Contents - Chat History JSON\" fields must be filled in.\n\nFor example:\n\n[{\"parts\":[{\"text\":\" \"}],\"role\":\"user\"},{\"parts\":[{\"text\":\" \"}],\"role\":\"model\"}]",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "FileMimeTypeProp",
            "title": "File MIME Type",
            "type": "select",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": {
                "options": [],
                "multiple": false,
                "fetchOn": [],
                "withLabel": false,
                "type": "",
                "pagination": {
                  "page": 0,
                  "context": "",
                  "supported": false
                },
                "query": {
                  "value": "",
                  "supported": false
                }
              },
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "FilePathGenericProp",
            "title": "File Path - Attachment",
            "type": "string",
            "required": false,
            "description": "Select a file content in the data pop-up window, example: 1.body.files.[0].content",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "RegionProp",
            "title": "Region",
            "type": "select",
            "required": false,
            "description": "An Google region which will be used to call regional endpoints",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": {
                "options": [],
                "multiple": false,
                "fetchOn": [],
                "withLabel": false,
                "type": "",
                "pagination": {
                  "page": 0,
                  "context": "",
                  "supported": false
                },
                "query": {
                  "value": "",
                  "supported": false
                }
              },
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "systemInstruction",
            "title": "System Instructions",
            "type": "string",
            "required": false,
            "description": "System instructions inform how the model should respond. Use them to give the model context to understand the task, provide more custom responses and adhere to specific guidelines. Instructions apply each time you send a request to the model. [Learn more](https://ai.google.dev/gemini-api/docs/system-instructions) about system instructions.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "safetySettings",
            "title": "Safety Setting JSON",
            "type": "string",
            "required": false,
            "description": "You can adjust the likelihood of receiving a model response that could contain harmful content. Content is blocked based on the probability that it's harmful. [Learn more](https://cloud.google.com/vertex-ai/generative-ai/docs/multimodal/configure-safety-attributes#gemini-TASK-samples-drest). See [API Reference](https://cloud.google.com/vertex-ai/generative-ai/docs/model-reference/inference#parameter-list).\n\nFor example:\n\n[{\"category\":\" \",\"threshold\":\" \"}]",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "GenerationConfigMaxOutputTokensProp",
            "title": "Generation Config - Max Output Tokens",
            "type": "int",
            "required": false,
            "description": "The maximum number of tokens generated per message ranges from 1 to 8192",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "8192",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "GenerationConfigTemperatureProp",
            "title": "Generation Config - Temperature",
            "type": "string",
            "required": false,
            "description": "A floating-point number that controls the randomness of predictions, ranging from 0.0 to 2.0",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "GenerationConfigResponseSchemaProp",
            "title": "Generation Config - Schema JSON",
            "type": "string",
            "required": false,
            "description": "See [API Reference](https://ai.google.dev/gemini-api/docs/structured-output?lang=rest#supply-schema-in-config), for example: {\"type\":\"ARRAY\",\"items\":{\"type\":\"OBJECT\",\"properties\":{\"recipe_name\":{\"type\":\"STRING\"}}}}",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "GenerationConfigStopSequencesProp",
            "title": "Generation Config - Stop Sequences JSON",
            "type": "string",
            "required": false,
            "description": "Input a JSON array of up to 5 strings that, when encountered, will terminate generation, for example: [\"test\", \"example\"]",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "generationConfigCandidateCount",
            "title": "Generation Config - Candidate Count",
            "type": "int",
            "required": false,
            "description": "Number of candidates to generate",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "GenerationConfigTopKProp",
            "title": "Generation Config - Top K",
            "type": "string",
            "required": false,
            "description": "The top-k parameter determines the number of most probable tokens to consider for selection during output generation. Input an integer value between 1 and 40.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "GenerationConfigTopPProp",
            "title": "Generation Config - Top P",
            "type": "string",
            "required": false,
            "description": "The top-p parameter in the model's output selection selects tokens from the most to least probable until the sum of their probabilities equals the top-p value. Input a float number between 0.0 and 1.0.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "FunctionCallingFunctionDeclarationsJsonProp",
            "title": "Function Calling - Declarations JSON",
            "type": "string",
            "required": false,
            "description": "Required for the first request function calling flow. See [Function Calling Reference](https://cloud.google.com/vertex-ai/generative-ai/docs/multimodal/function-calling).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "FunctionCallingResponseFunctionNameProp",
            "title": "Function Calling - Response Function Name",
            "type": "string",
            "required": false,
            "description": "The name of the called function. Expected to be the same as defined in previous Google Response. See [Function Calling Reference](https://cloud.google.com/vertex-ai/generative-ai/docs/multimodal/function-calling).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "FunctionCallingResponseContentJsonProp",
            "title": "Function Calling - Response Content JSON",
            "type": "string",
            "required": false,
            "description": "The called function response data. See [Function Calling Reference](https://cloud.google.com/vertex-ai/generative-ai/docs/multimodal/function-calling).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "FunctionCallingFunctionDeclarationsConfigModeProp",
            "title": "Function Calling - Config (Mode)",
            "type": "select",
            "required": false,
            "description": "Select function calling tools config mode. See [Function Calling Reference](https://cloud.google.com/vertex-ai/generative-ai/docs/multimodal/function-calling).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": {
                "options": [],
                "multiple": false,
                "fetchOn": [],
                "withLabel": false,
                "type": "",
                "pagination": {
                  "page": 0,
                  "context": "",
                  "supported": false
                },
                "query": {
                  "value": "",
                  "supported": false
                }
              },
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "FunctionCallingFunctionDeclarationsConfigFunctionNamesProp",
            "title": "Function Calling - Config (Function Names) JSON",
            "type": "string",
            "required": false,
            "description": "Input function names. See [Function Calling Reference](https://cloud.google.com/vertex-ai/generative-ai/docs/multimodal/function-calling).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": {
          "environment": "",
          "isPd": true,
          "isJsn": true,
          "pdAvailableGetLastRecords": false
        },
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "683d268a27d1709e9f1adac2",
      "title": "Extract JSON voice_id",
      "description": "",
      "localId": "9",
      "typeId": "62cc22317ae28c026d256930",
      "params": [
        {
          "key": "code",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "/*\nWrite any Node.js code.\nAdd any NPM packages to your code. Learn more here:\nhttps://latenode.com/help/js_code_npm_packages\nAdd custom input fields for data. Learn more here:\nhttps://latenode.com/help/js_code_params_generation\n*/\n\nfunction extractJson(markdown) {\n\tif (typeof markdown !== 'string') throw new Error('Input is not a string.');\n\tconst jsonCodeBlockRegex = /```json\\s*([\\s\\S]*?)```/i;\n\tconst match = markdown.match(jsonCodeBlockRegex);\n\tlet jsonString = match ? match[1] : markdown.trim();\n\tlet obj;\n\ttry {\n\t\tobj = JSON.parse(jsonString);\n\t} catch (e) {\n\t\tthrow new Error('Failed to parse JSON: ' + e.message);\n\t}\n\treturn obj;\n}\n\nexport default async function run({ execution_id, input, data, store, db }) {\n\tconst aiResponse = data[\"{{$8.result.response.candidates.[0].content.parts.[0].text}}\"];\n\tlet jsonResult;\n\ttry{\n\t\tjsonResult = extractJson(aiResponse);\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n\treturn {\n\t\trecommendedVoiceID: jsonResult.voice_id\n\t}\n}",
            "text": "/*\nWrite any Node.js code.\nAdd any NPM packages to your code. Learn more here:\nhttps://latenode.com/help/js_code_npm_packages\nAdd custom input fields for data. Learn more here:\nhttps://latenode.com/help/js_code_params_generation\n*/\n\nfunction extractJson(markdown) {\n\tif (typeof markdown !== 'string') throw new Error('Input is not a string.');\n\tconst jsonCodeBlockRegex = /```json\\s*([\\s\\S]*?)```/i;\n\tconst match = markdown.match(jsonCodeBlockRegex);\n\tlet jsonString = match ? match[1] : markdown.trim();\n\tlet obj;\n\ttry {\n\t\tobj = JSON.parse(jsonString);\n\t} catch (e) {\n\t\tthrow new Error('Failed to parse JSON: ' + e.message);\n\t}\n\treturn obj;\n}\n\nexport default async function run({ execution_id, input, data, store, db }) {\n\tconst aiResponse = data[\"{{$8.result.response.candidates.[0].content.parts.[0].text}}\"];\n\tlet jsonResult;\n\ttry{\n\t\tjsonResult = extractJson(aiResponse);\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n\treturn {\n\t\trecommendedVoiceID: jsonResult.voice_id\n\t}\n}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 678,
        "y": 124
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "code",
            "title": "",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": {
                "lang": "",
                "prefix": "",
                "suffix": "",
                "fetchOn": []
              },
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "683d2805ffe5d69f609cd507",
      "title": "Create Personality",
      "description": "",
      "localId": "10",
      "typeId": "668e5696f39d9d00ab2a75c4",
      "params": [
        {
          "key": "model",
          "type": "select",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [
              "gpt-4.1"
            ],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "user_prompt",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "Create a personality based on the following characteristics and add to each of the sections while including the pre-populated items. Add a line about each agent listed in the \"Other agents, assistants, or co-workers\" section based on how the personality of {{1.body.message.toolCalls.[0].function.arguments.name}} interacts with the listed agent's personality traits.\n\nDefined Characteristics:\n{{1.body.message.toolCalls.[0].function.arguments}}\n\n# Voice Chat Agent Identity & Personality Profile\n\n## Core Identity\n**Name:** {{1.body.message.toolCalls.[0].function.arguments.name}}\n**Role:** {{1.body.message.toolCalls.[0].function.arguments.purpose}}\n**Primary Function:** <primary function>\n\n### Voice & Communication Style\n- Never describe or say the name of the tool you use to get information. You may ask clarifying questions if needed to get all parameters required for a tool.\n\n### Core Personality Characteristics\n\n### Emotional Intelligence\n\n### Casual Conversation\n\n### Conversation Management\n\n### Problem-Solving Approach\n\n### Trust Building\n\n### Conversational Bridges\n\n### Memory & Context\n- Assume every conversation is getting held by telephone.\n- Do not mention being AI or a voice assistant. Instead, reference yourself as {{1.body.message.toolCalls.[0].function.arguments.name}}\n\n### Adaptive Expertise\n\n## Behavioral Notes\n\n## Unique Characteristics\n\n## My Story\n\n## Other agents, assistants, or co-workers\n{{map($29.result;\"value\")}}\n\n## Customer details\nUse these details to assist the customer and provide a personalized experience.\n- The user's phone number is \\{\\{customer.number\\}\\}.\n- Observations about the user \\{\\{observations\\}\\}.\n- User's home city: \\{\\{city\\}\\}\n- User's home zip code: \\{\\{zip\\}\\}",
            "text": "Create a personality based on the following characteristics and add to each of the sections while including the pre-populated items. Add a line about each agent listed in the \"Other agents, assistants, or co-workers\" section based on how the personality of {{1.body.message.toolCalls.[0].function.arguments.name}} interacts with the listed agent's personality traits.\n\nDefined Characteristics:\n{{1.body.message.toolCalls.[0].function.arguments}}\n\n# Voice Chat Agent Identity & Personality Profile\n\n## Core Identity\n**Name:** {{1.body.message.toolCalls.[0].function.arguments.name}}\n**Role:** {{1.body.message.toolCalls.[0].function.arguments.purpose}}\n**Primary Function:** <primary function>\n\n### Voice & Communication Style\n- Never describe or say the name of the tool you use to get information. You may ask clarifying questions if needed to get all parameters required for a tool.\n\n### Core Personality Characteristics\n\n### Emotional Intelligence\n\n### Casual Conversation\n\n### Conversation Management\n\n### Problem-Solving Approach\n\n### Trust Building\n\n### Conversational Bridges\n\n### Memory & Context\n- Assume every conversation is getting held by telephone.\n- Do not mention being AI or a voice assistant. Instead, reference yourself as {{1.body.message.toolCalls.[0].function.arguments.name}}\n\n### Adaptive Expertise\n\n## Behavioral Notes\n\n## Unique Characteristics\n\n## My Story\n\n## Other agents, assistants, or co-workers\n{{map($29.result;\"value\")}}\n\n## Customer details\nUse these details to assist the customer and provide a personalized experience.\n- The user's phone number is \\{\\{customer.number\\}\\}.\n- Observations about the user \\{\\{observations\\}\\}.\n- User's home city: \\{\\{city\\}\\}\n- User's home zip code: \\{\\{zip\\}\\}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "fileName",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "file",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "history",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "temperature",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "1.0",
            "text": "1.0",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "max_completion_tokens",
          "type": "int",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "n",
          "type": "int",
          "value": {
            "stringToString": [],
            "int": "1",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "stop",
          "type": "string_array",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "presence_penalty",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "0",
            "text": "0",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "frequency_penalty",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "0",
            "text": "0",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "reasoning_effort",
          "type": "select",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "store",
          "type": "bool",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "prediction",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "user",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "tools",
          "type": "string_array",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "tool_choice",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "top_p",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "1",
            "text": "1",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "logprobs",
          "type": "bool",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "top_logprobs",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "seed",
          "type": "int",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "response_format",
          "type": "select",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "schema_json",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "quick_preview_schema",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "{\"response\":\"result.choices[0].message.content\"}",
            "text": "{\"response\":\"result.choices[0].message.content\"}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 452,
        "y": 186
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "model",
            "title": "Model",
            "type": "select",
            "required": false,
            "description": "By default, GPT o3 mini is selected. To find out which specific version is used for each model, [see the documentation](https://platform.openai.com/docs/models#current-model-aliases).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": {
                "options": [
                  {
                    "key": "gpt-4.1",
                    "value": "GPT 4.1"
                  }
                ],
                "multiple": false,
                "fetchOn": [],
                "withLabel": false,
                "type": "",
                "pagination": {
                  "page": 0,
                  "context": "",
                  "supported": false
                },
                "query": {
                  "value": "",
                  "supported": false
                }
              },
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [
                "o3-mini"
              ],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "user_prompt",
            "title": "User Prompt",
            "type": "string",
            "required": false,
            "description": "Your new question prompt: please note that at least one of the \"User Prompt\", \"Dialogue History\" or \"File\" fields must be filled in",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "Hello ChatGPT, Let’s talk about this: {query}",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "fileName",
            "title": "File Name",
            "type": "string",
            "required": false,
            "description": "Select a file name in the data pop-up window, for example: 1.body.files.[0].filename, or specify your own file name with an extension, for example: image.png. Required if field \"File\" has a content. It may be a document, audio or photo file (audio supports only mp3 and wav formats).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "file",
            "title": "File",
            "type": "string",
            "required": false,
            "description": "Select a file content in the data pop-up window, for example: 1.body.files.[0].content, or pass the file URL,for example: https://file.png. It may be a document, audio or photo file (audio supports only mp3 and wav formats). Check [documentation](https://platform.openai.com/docs/models#current-model-aliases) to find out which file type is supported by this model.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "history",
            "title": "Dialogue History JSON",
            "type": "string",
            "required": false,
            "description": "Valid JSON containing [the array of objects](https://platform.openai.com/docs/api-reference/chat/create), e.g. [{\"role\":\"user\",\"content\":\"Hello!\"}, {\"role\": \"assistant\", \"content\": \"Hi there! How can I help you today?\"}]\n\n`role` can be one of (**the roles should alternate**):\n\n`system` - the message author role is system;\n\n`user` - the message author role is user;\n\n`assistant` - the message author role is assistant;\n\n`tool` - the message author role is tool;",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "temperature",
            "title": "Temperature",
            "type": "string",
            "required": false,
            "description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. We generally recommend altering this or \"Top P\" but not both.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "1.0",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "max_completion_tokens",
            "title": "Max Tokens",
            "type": "int",
            "required": false,
            "description": "An upper bound for the number of tokens that can be generated for a completion, including visible output tokens and [reasoning tokens](https://platform.openai.com/docs/guides/reasoning).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "n",
            "title": "Chat Completion Choices",
            "type": "int",
            "required": false,
            "description": "How many chat completion choices to generate for each input message",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "1",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "stop",
            "title": "Stop",
            "type": "string_array",
            "required": false,
            "description": "Up to 4 sequences where the API will stop generating further tokens",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "presence_penalty",
            "title": "Presence Penalty",
            "type": "string",
            "required": false,
            "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "0",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "frequency_penalty",
            "title": "Frequency Penalty",
            "type": "string",
            "required": false,
            "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "0",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "reasoning_effort",
            "title": "Reasoning Effort",
            "type": "select",
            "required": false,
            "description": "For o-series models only. Constrains effort on reasoning [for reasoning models](https://platform.openai.com/docs/api-reference/runs/createRun).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": {
                "options": [],
                "multiple": false,
                "fetchOn": [],
                "withLabel": false,
                "type": "",
                "pagination": {
                  "page": 0,
                  "context": "",
                  "supported": false
                },
                "query": {
                  "value": "",
                  "supported": false
                }
              },
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "store",
            "title": "Store",
            "type": "bool",
            "required": false,
            "description": "Whether or not to store the output of this chat completion request for use in our [model distillation](https://platform.openai.com/docs/guides/distillation) or [evals](https://platform.openai.com/docs/guides/evals) products",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "prediction",
            "title": "Prediction",
            "type": "string",
            "required": false,
            "description": "Enter correct JSON, for example: `{\"type: \"content\", \"content\": \"some prediction\"}`, [see documentation](https://platform.openai.com/docs/api-reference/chat/create)",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "user",
            "title": "User",
            "type": "string",
            "required": false,
            "description": "A unique identifier representing your end-user, which can help Azure OpenAI to monitor and detect abuse",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "tools",
            "title": "Tools JSON",
            "type": "string_array",
            "required": false,
            "description": "Currently, only functions are supported as a tool. Accept JSON, e.g. `{\"type\": \"function\", \"function\": { \"name\": \"get_rain_probability\", \"description\": \"Get the probability of rain for a specific location\", \"parameters\": { \"type\": \"object\", \"properties\": { \"location\": { \"type\": \"string\", \"description\": \"The city and state, e.g., San Francisco, CA\" } }, \"required\": [\"location\"] } } }`. [More info](https://platform.openai.com/docs/api-reference/chat/create#chat-create-tools).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "tool_choice",
            "title": "Tool Choice JSON",
            "type": "string",
            "required": false,
            "description": "Controls which (if any) tool is called by the model. `none` means the model will not call any tool and instead generates a message. `auto` means the model can pick between generating a message or calling one or more tools. `required` means the model must call one or more tools. Specifying a particular tool via `{\"type\": \"function\", \"function\": {\"name\": \"get_rain_probability\"}}` forces the model to call that tool.\n\n`none` is the default when no tools are present. `auto` is the default if tools are present. *Format: JSON object.* [More info](https://platform.openai.com/docs/api-reference/chat/create#chat-create-tool_choice).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "top_p",
            "title": "Top P",
            "type": "string",
            "required": false,
            "description": "Number between 0 and 1. An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with \"Top P\" probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered. We generally recommend altering this or \"Temperature\" but not both.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "1",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "logprobs",
            "title": "Log Probs",
            "type": "bool",
            "required": false,
            "description": "Whether to return log probabilities of the output tokens or not. If `true`, returns the log probabilities of each output token returned in the `content` of `message`.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "top_logprobs",
            "title": "Top Log Probs",
            "type": "string",
            "required": false,
            "description": "An integer between 0 and 5 specifying the number of most likely tokens to return at each token position, each with an associated log probability. \"Logprobs\" must be set to `true` if this parameter is used.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "seed",
            "title": "Seed",
            "type": "int",
            "required": false,
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "response_format",
            "title": "Response Format",
            "type": "select",
            "required": false,
            "description": "An object specifying the format that the model must output. To enable JSON mode, also mention it in the prompt. Example: 'Make a list in JSON format'.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": {
                "options": [],
                "multiple": false,
                "fetchOn": [],
                "withLabel": false,
                "type": "",
                "pagination": {
                  "page": 0,
                  "context": "",
                  "supported": false
                },
                "query": {
                  "value": "",
                  "supported": false
                }
              },
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "schema_json",
            "title": "Response Format Schema JSON",
            "type": "string",
            "required": false,
            "description": "Required when \"Parsed JSON Schema\" or \"JSON Schema\" is selected in the format, otherwise this property is not used. Set your own schema, e.g. `{\"type\": \"json_schema\", \"json_schema\": { \"name\": \"myName\", \"schema\":  { \"type\": \"object\", \"properties\": { \"news\": { \"type\": \"string\" } },\"required\": [\"news\"], \"additionalProperties\": false }, \"name\": \"additionalProperties\"} }`, [see more info](https://platform.openai.com/docs/api-reference/responses/create#responses-create-text)",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": {
          "environment": "",
          "isPd": true,
          "isJsn": true,
          "pdAvailableGetLastRecords": false
        },
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "683d9ea669bc1858facca6e8",
      "title": "Store Created Assistant in DB",
      "description": "",
      "localId": "12",
      "typeId": "66bf657a22e621de86cbee7b",
      "params": [
        {
          "key": "storage_name",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "6d16c0c4-2139-45f6-a400-6f17e29229bb",
            "text": "6d16c0c4-2139-45f6-a400-6f17e29229bb",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "collection_name",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "generated_assistants",
            "text": "generated_assistants",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "object",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "{{4.data}}",
            "text": "{{4.data}}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 1083,
        "y": 71
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "storage_name",
            "title": "Storage ID",
            "type": "text",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "collection_name",
            "title": "Collection name",
            "type": "text",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "object",
            "title": "Object",
            "type": "text",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "683d9fe430380c219b1d90d3",
      "title": "Create first message",
      "description": "",
      "localId": "13",
      "typeId": "668e5696f39d9d00ab2a75c4",
      "params": [
        {
          "key": "model",
          "type": "select",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [
              "o3-mini"
            ],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "user_prompt",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "Generate a very brief telephone greeting (max 10 words) said by {{1.body.message.toolCalls.[0].function.arguments.name}}. Do not include any placeholders. The response should have the following style: {{1.body.message.toolCalls.[0].function.arguments.voice_style}}\n\n",
            "text": "Generate a very brief telephone greeting (max 10 words) said by {{1.body.message.toolCalls.[0].function.arguments.name}}. Do not include any placeholders. The response should have the following style: {{1.body.message.toolCalls.[0].function.arguments.voice_style}}\n\n",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "fileName",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "file",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "history",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "temperature",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "1.0",
            "text": "1.0",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "max_completion_tokens",
          "type": "int",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "n",
          "type": "int",
          "value": {
            "stringToString": [],
            "int": "1",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "stop",
          "type": "string_array",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "presence_penalty",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "0",
            "text": "0",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "frequency_penalty",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "0",
            "text": "0",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "reasoning_effort",
          "type": "select",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "store",
          "type": "bool",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "prediction",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "user",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "tools",
          "type": "string_array",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "tool_choice",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "top_p",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "1",
            "text": "1",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "logprobs",
          "type": "bool",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "top_logprobs",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "seed",
          "type": "int",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "response_format",
          "type": "select",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "schema_json",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "quick_preview_schema",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "{\"response\":\"result.choices[0].message.content\"}",
            "text": "{\"response\":\"result.choices[0].message.content\"}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 455,
        "y": 326
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "model",
            "title": "Model",
            "type": "select",
            "required": false,
            "description": "By default, GPT o3 mini is selected. To find out which specific version is used for each model, [see the documentation](https://platform.openai.com/docs/models#current-model-aliases).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": {
                "options": [
                  {
                    "key": "o3-mini",
                    "value": "o3 Mini"
                  }
                ],
                "multiple": false,
                "fetchOn": [],
                "withLabel": false,
                "type": "",
                "pagination": {
                  "page": 0,
                  "context": "",
                  "supported": false
                },
                "query": {
                  "value": "",
                  "supported": false
                }
              },
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [
                "o3-mini"
              ],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "user_prompt",
            "title": "User Prompt",
            "type": "string",
            "required": false,
            "description": "Your new question prompt: please note that at least one of the \"User Prompt\", \"Dialogue History\" or \"File\" fields must be filled in",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "Hello ChatGPT, Let’s talk about this: {query}",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "fileName",
            "title": "File Name",
            "type": "string",
            "required": false,
            "description": "Select a file name in the data pop-up window, for example: 1.body.files.[0].filename, or specify your own file name with an extension, for example: image.png. Required if field \"File\" has a content. It may be a document, audio or photo file (audio supports only mp3 and wav formats).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "file",
            "title": "File",
            "type": "string",
            "required": false,
            "description": "Select a file content in the data pop-up window, for example: 1.body.files.[0].content, or pass the file URL,for example: https://file.png. It may be a document, audio or photo file (audio supports only mp3 and wav formats). Check [documentation](https://platform.openai.com/docs/models#current-model-aliases) to find out which file type is supported by this model.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "history",
            "title": "Dialogue History JSON",
            "type": "string",
            "required": false,
            "description": "Valid JSON containing [the array of objects](https://platform.openai.com/docs/api-reference/chat/create), e.g. [{\"role\":\"user\",\"content\":\"Hello!\"}, {\"role\": \"assistant\", \"content\": \"Hi there! How can I help you today?\"}]\n\n`role` can be one of (**the roles should alternate**):\n\n`system` - the message author role is system;\n\n`user` - the message author role is user;\n\n`assistant` - the message author role is assistant;\n\n`tool` - the message author role is tool;",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "temperature",
            "title": "Temperature",
            "type": "string",
            "required": false,
            "description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. We generally recommend altering this or \"Top P\" but not both.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "1.0",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "max_completion_tokens",
            "title": "Max Tokens",
            "type": "int",
            "required": false,
            "description": "An upper bound for the number of tokens that can be generated for a completion, including visible output tokens and [reasoning tokens](https://platform.openai.com/docs/guides/reasoning).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "n",
            "title": "Chat Completion Choices",
            "type": "int",
            "required": false,
            "description": "How many chat completion choices to generate for each input message",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "1",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "stop",
            "title": "Stop",
            "type": "string_array",
            "required": false,
            "description": "Up to 4 sequences where the API will stop generating further tokens",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "presence_penalty",
            "title": "Presence Penalty",
            "type": "string",
            "required": false,
            "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "0",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "frequency_penalty",
            "title": "Frequency Penalty",
            "type": "string",
            "required": false,
            "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "0",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "reasoning_effort",
            "title": "Reasoning Effort",
            "type": "select",
            "required": false,
            "description": "For o-series models only. Constrains effort on reasoning [for reasoning models](https://platform.openai.com/docs/api-reference/runs/createRun).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": {
                "options": [],
                "multiple": false,
                "fetchOn": [],
                "withLabel": false,
                "type": "",
                "pagination": {
                  "page": 0,
                  "context": "",
                  "supported": false
                },
                "query": {
                  "value": "",
                  "supported": false
                }
              },
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "store",
            "title": "Store",
            "type": "bool",
            "required": false,
            "description": "Whether or not to store the output of this chat completion request for use in our [model distillation](https://platform.openai.com/docs/guides/distillation) or [evals](https://platform.openai.com/docs/guides/evals) products",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "prediction",
            "title": "Prediction",
            "type": "string",
            "required": false,
            "description": "Enter correct JSON, for example: `{\"type: \"content\", \"content\": \"some prediction\"}`, [see documentation](https://platform.openai.com/docs/api-reference/chat/create)",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "user",
            "title": "User",
            "type": "string",
            "required": false,
            "description": "A unique identifier representing your end-user, which can help Azure OpenAI to monitor and detect abuse",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "tools",
            "title": "Tools JSON",
            "type": "string_array",
            "required": false,
            "description": "Currently, only functions are supported as a tool. Accept JSON, e.g. `{\"type\": \"function\", \"function\": { \"name\": \"get_rain_probability\", \"description\": \"Get the probability of rain for a specific location\", \"parameters\": { \"type\": \"object\", \"properties\": { \"location\": { \"type\": \"string\", \"description\": \"The city and state, e.g., San Francisco, CA\" } }, \"required\": [\"location\"] } } }`. [More info](https://platform.openai.com/docs/api-reference/chat/create#chat-create-tools).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "tool_choice",
            "title": "Tool Choice JSON",
            "type": "string",
            "required": false,
            "description": "Controls which (if any) tool is called by the model. `none` means the model will not call any tool and instead generates a message. `auto` means the model can pick between generating a message or calling one or more tools. `required` means the model must call one or more tools. Specifying a particular tool via `{\"type\": \"function\", \"function\": {\"name\": \"get_rain_probability\"}}` forces the model to call that tool.\n\n`none` is the default when no tools are present. `auto` is the default if tools are present. *Format: JSON object.* [More info](https://platform.openai.com/docs/api-reference/chat/create#chat-create-tool_choice).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "top_p",
            "title": "Top P",
            "type": "string",
            "required": false,
            "description": "Number between 0 and 1. An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with \"Top P\" probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered. We generally recommend altering this or \"Temperature\" but not both.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "1",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "logprobs",
            "title": "Log Probs",
            "type": "bool",
            "required": false,
            "description": "Whether to return log probabilities of the output tokens or not. If `true`, returns the log probabilities of each output token returned in the `content` of `message`.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "top_logprobs",
            "title": "Top Log Probs",
            "type": "string",
            "required": false,
            "description": "An integer between 0 and 5 specifying the number of most likely tokens to return at each token position, each with an associated log probability. \"Logprobs\" must be set to `true` if this parameter is used.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "seed",
            "title": "Seed",
            "type": "int",
            "required": false,
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "response_format",
            "title": "Response Format",
            "type": "select",
            "required": false,
            "description": "An object specifying the format that the model must output. To enable JSON mode, also mention it in the prompt. Example: 'Make a list in JSON format'.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": {
                "options": [],
                "multiple": false,
                "fetchOn": [],
                "withLabel": false,
                "type": "",
                "pagination": {
                  "page": 0,
                  "context": "",
                  "supported": false
                },
                "query": {
                  "value": "",
                  "supported": false
                }
              },
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "schema_json",
            "title": "Response Format Schema JSON",
            "type": "string",
            "required": false,
            "description": "Required when \"Parsed JSON Schema\" or \"JSON Schema\" is selected in the format, otherwise this property is not used. Set your own schema, e.g. `{\"type\": \"json_schema\", \"json_schema\": { \"name\": \"myName\", \"schema\":  { \"type\": \"object\", \"properties\": { \"news\": { \"type\": \"string\" } },\"required\": [\"news\"], \"additionalProperties\": false }, \"name\": \"additionalProperties\"} }`, [see more info](https://platform.openai.com/docs/api-reference/responses/create#responses-create-text)",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": {
          "environment": "",
          "isPd": true,
          "isJsn": true,
          "pdAvailableGetLastRecords": false
        },
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "683dcdfa30380c219b1d94c0",
      "title": "Check agent name",
      "description": "",
      "localId": "16",
      "typeId": "66bf657a22e621de86cbee7c",
      "params": [
        {
          "key": "storage_name",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "6d16c0c4-2139-45f6-a400-6f17e29229bb",
            "text": "6d16c0c4-2139-45f6-a400-6f17e29229bb",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "collection_name",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "generated_assistants",
            "text": "generated_assistants",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "filter",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "conditions:\n  - operation: equal\n    query:\n      path: name\n    expected:\n      value: {{ifEmpty(1.body.message.toolCalls.[0].function.arguments.name;\"noresult\")}}",
            "text": "conditions:\n  - operation: equal\n    query:\n      path: name\n    expected:\n      value: {{ifEmpty(1.body.message.toolCalls.[0].function.arguments.name;\"noresult\")}}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "limit",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "offset",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": -415,
        "y": 134
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "storage_name",
            "title": "Storage ID",
            "type": "text",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "collection_name",
            "title": "Collection name",
            "type": "text",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "filter",
            "title": "Filter",
            "type": "text",
            "required": false,
            "description": "Filter in YAML format. For details see [documentation](https://docs.latenode.com/docs/4eb52adf-0357-46a9-b85d-872b79ced50e/)",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "limit",
            "title": "Limit",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "offset",
            "title": "Offset",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "683dceb630380c219b1d94da",
      "title": "",
      "description": "",
      "localId": "17",
      "typeId": "62cc22317ae28c026d25692e",
      "params": [
        {
          "key": "status",
          "type": "int",
          "value": {
            "stringToString": [],
            "int": "500",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "headers",
          "type": "string_to_string",
          "value": {
            "stringToString": [
              {
                "key": "content-type",
                "value": "application/json"
              }
            ],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "body",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": -424,
        "y": 394
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "status",
            "title": "Код ответа",
            "type": "int",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": {
                "max": 599,
                "min": 200,
                "fetchOn": []
              },
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "200",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "headers",
            "title": "Заголовки ответа",
            "type": "string_to_string",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": {
                "maxCount": 0,
                "fixedSize": false,
                "fetchOn": [],
                "allowEmpty": false
              },
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [
                {
                  "key": "content-type",
                  "value": "application/json"
                }
              ],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "body",
            "title": "Тело ответа",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "683dcf2f11443f16554e0ea1",
      "title": "",
      "description": "",
      "localId": "18",
      "typeId": "62cc22317ae28c026d25692e",
      "params": [
        {
          "key": "status",
          "type": "int",
          "value": {
            "stringToString": [],
            "int": "500",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "headers",
          "type": "string_to_string",
          "value": {
            "stringToString": [
              {
                "key": "content-type",
                "value": "application/json"
              }
            ],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "body",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "{\"error\": \"Agents with identical names are not allowed\"}",
            "text": "{\"error\": \"Agents with identical names are not allowed\"}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": -240,
        "y": 389
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "status",
            "title": "Код ответа",
            "type": "int",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": {
                "max": 599,
                "min": 200,
                "fetchOn": []
              },
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "200",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "headers",
            "title": "Заголовки ответа",
            "type": "string_to_string",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": {
                "maxCount": 0,
                "fixedSize": false,
                "fetchOn": [],
                "allowEmpty": false
              },
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [
                {
                  "key": "content-type",
                  "value": "application/json"
                }
              ],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "body",
            "title": "Тело ответа",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "683de79769bc1858faccac50",
      "title": "Get other voice agents",
      "description": "",
      "localId": "19",
      "typeId": "66bf657a22e621de86cbee7c",
      "params": [
        {
          "key": "storage_name",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "6d16c0c4-2139-45f6-a400-6f17e29229bb",
            "text": "6d16c0c4-2139-45f6-a400-6f17e29229bb",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "collection_name",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "generated_assistants",
            "text": "generated_assistants",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "filter",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "conditions:\n  - operation: not_equal\n    query:\n      path: name\n    expected:\n      value: {{if(not(empty(1.body.message.toolCalls.[0].function.arguments.name));1.body.message.toolCalls.[0].function.arguments.name;\"noresult\")}}",
            "text": "conditions:\n  - operation: not_equal\n    query:\n      path: name\n    expected:\n      value: {{if(not(empty(1.body.message.toolCalls.[0].function.arguments.name));1.body.message.toolCalls.[0].function.arguments.name;\"noresult\")}}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "limit",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "offset",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": -235,
        "y": 167
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "storage_name",
            "title": "Storage ID",
            "type": "text",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "collection_name",
            "title": "Collection name",
            "type": "text",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "filter",
            "title": "Filter",
            "type": "text",
            "required": false,
            "description": "Filter in YAML format. For details see [documentation](https://docs.latenode.com/docs/4eb52adf-0357-46a9-b85d-872b79ced50e/)",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "limit",
            "title": "Limit",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "offset",
            "title": "Offset",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "683de7f769bc1858faccac62",
      "title": "",
      "description": "",
      "localId": "20",
      "typeId": "64c3aa2e17b94dc0e4b63dc0",
      "params": [
        {
          "key": "data",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "{{19.result}}",
            "text": "{{19.result}}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 1780,
        "y": 60
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "data",
            "title": "Data to iterate",
            "type": "string",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "683de7f769bc1858faccac63",
      "title": "Get existing agent",
      "description": "",
      "localId": "21",
      "typeId": "62cc22317ae28c026d256930",
      "params": [
        {
          "key": "api_key",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "...",
            "text": "...",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "code",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "/** @CustomParams\n{\n\t\"api_key\": {\n\t\t\"type\": \"string\",\n\t\t\"title\": \"API Key\",\n\t\t\"description\": \"Your API key for Vapi AI\"\n\t}\n}\n*/\n\nimport axios from \"axios\";\n\nexport default async function run({ execution_id, input, data }) {\n\ttry {\n\t\tconst response = await axios.get(\n\t\t\t`https://api.vapi.ai/assistant/${data[\"{{$20.value.value.id}}\"]}`,\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\t\"Authorization\": `Bearer ${data.api_key}`,\n\t\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tlet systemPrompt = null;\n\t\tconst messages = response.data?.model?.messages;\n\t\tconst agentId = response.data?.id;\n\t\tconst agentName = response.data?.name;\n\t\tif (Array.isArray(messages)) {\n\t\t\tconst systemMsg = messages.find(msg => msg.role === \"system\");\n\t\t\tsystemPrompt = systemMsg ? systemMsg.content : null;\n\t\t}\n\n\t\treturn {\n\t\t\tstatus: response.status,\n\t\t\tdata: response.data,\n\t\t\tagentId,\n\t\t\tagentName,\n\t\t\tsystemPrompt\n\t\t};\n\t} catch (error) {\n\t\treturn {\n\t\t\terror: error.response ? error.response.data : error.message\n\t\t};\n\t}\n}",
            "text": "/** @CustomParams\n{\n\t\"api_key\": {\n\t\t\"type\": \"string\",\n\t\t\"title\": \"API Key\",\n\t\t\"description\": \"Your API key for Vapi AI\"\n\t}\n}\n*/\n\nimport axios from \"axios\";\n\nexport default async function run({ execution_id, input, data }) {\n\ttry {\n\t\tconst response = await axios.get(\n\t\t\t`https://api.vapi.ai/assistant/${data[\"{{$20.value.value.id}}\"]}`,\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\t\"Authorization\": `Bearer ${data.api_key}`,\n\t\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tlet systemPrompt = null;\n\t\tconst messages = response.data?.model?.messages;\n\t\tconst agentId = response.data?.id;\n\t\tconst agentName = response.data?.name;\n\t\tif (Array.isArray(messages)) {\n\t\t\tconst systemMsg = messages.find(msg => msg.role === \"system\");\n\t\t\tsystemPrompt = systemMsg ? systemMsg.content : null;\n\t\t}\n\n\t\treturn {\n\t\t\tstatus: response.status,\n\t\t\tdata: response.data,\n\t\t\tagentId,\n\t\t\tagentName,\n\t\t\tsystemPrompt\n\t\t};\n\t} catch (error) {\n\t\treturn {\n\t\t\terror: error.response ? error.response.data : error.message\n\t\t};\n\t}\n}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 1912,
        "y": -61
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "api_key",
            "title": "API Key",
            "type": "string",
            "required": false,
            "description": "Your API key for Vapi AI",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "code",
            "title": "",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": {
                "lang": "",
                "prefix": "",
                "suffix": "",
                "fetchOn": []
              },
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "683e0c597e1eb9e538d0caf6",
      "title": "Update existing agent",
      "description": "",
      "localId": "22",
      "typeId": "62cc22317ae28c026d256930",
      "params": [
        {
          "key": "api_key",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "...",
            "text": "...",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "code",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "/** @CustomParams\n{\n\t\"api_key\": {\n\t\t\"type\": \"string\",\n\t\t\"title\": \"API Key\",\n\t\t\"description\": \"Your API key for Vapi AI\"\n\t}\n}\n*/\n\nimport axios from \"axios\";\n\nexport default async function run({ execution_id, input, data }) {\n\ttry {\n\t\t// 1. Get systemContent and agentId variables\n\t\tconst systemContent = data[\"{{$21.systemPrompt}}\"]; // <-- Replace with your correct path\n\t\tconst agentId = data[\"{{$21.agentId}}\"]; // <-- Replace with your correct path\n\n\t\t// 2. Modify the system prompt as you want (your original logic)\n\t\tlet modifiedContent = systemContent;\n\t\tconst heading = \"## Other agents, assistants, or co-workers\";\n\t\tconst nextHeading = \"## Customer details\";\n\t\tif (systemContent) {\n\t\t\tconst headingIndex = systemContent.indexOf(heading);\n\t\t\tconst nextHeadingIndex = systemContent.indexOf(nextHeading);\n\t\t\tif (headingIndex !== -1 && nextHeadingIndex !== -1 && nextHeadingIndex > headingIndex) {\n\t\t\t\tconst before = systemContent.slice(0, headingIndex + heading.length);\n\t\t\t\tconst middle = `\\n${data[\"{{$23.result.choices.[0].message.content}}\"]}`; // <-- Replace if needed\n\t\t\t\tconst after = systemContent.slice(headingIndex + heading.length, systemContent.length);\n\t\t\t\tmodifiedContent = before + middle + after;\n\t\t\t}\n\t\t}\n\n\t\t// 3. Get the original model object from node 20 and parse it\n\t\tlet model = JSON.parse(data[\"{{$21.data.model}}\"]); // <-- Replace with your correct path\n\n\t\t// Debug: Log toolIds before update\n\t\tconsole.log(\"toolIds before update:\", model.toolIds);\n\n\t\t// 4. Update the messages array inside the model\n\t\tif (Array.isArray(model.messages)) {\n\t\t\tmodel.messages = model.messages.map(msg => {\n\t\t\t\tif (msg.role === \"system\") {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...msg,\n\t\t\t\t\t\tcontent: modifiedContent\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn msg;\n\t\t\t});\n\t\t} else {\n\t\t\tthrow new Error(\"model.messages is not an array\");\n\t\t}\n\n\t\t// Debug: Log toolIds after update\n\t\tconsole.log(\"toolIds after update:\", model.toolIds);\n\n\t\t// 5. Send PATCH request with the updated model object\n\t\tconst response = await axios.patch(\n\t\t\t`https://api.vapi.ai/assistant/${agentId}`,\n\t\t\t{ model },\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\t\"Authorization\": `Bearer ${data.api_key}`,\n\t\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\treturn {\n\t\t\tstatus: response.status,\n\t\t\tmodel // for debug\n\t\t};\n\t} catch (error) {\n\t\treturn {\n\t\t\terror: error.response ? error.response.data : error.message\n\t\t};\n\t}\n}",
            "text": "/** @CustomParams\n{\n\t\"api_key\": {\n\t\t\"type\": \"string\",\n\t\t\"title\": \"API Key\",\n\t\t\"description\": \"Your API key for Vapi AI\"\n\t}\n}\n*/\n\nimport axios from \"axios\";\n\nexport default async function run({ execution_id, input, data }) {\n\ttry {\n\t\t// 1. Get systemContent and agentId variables\n\t\tconst systemContent = data[\"{{$21.systemPrompt}}\"]; // <-- Replace with your correct path\n\t\tconst agentId = data[\"{{$21.agentId}}\"]; // <-- Replace with your correct path\n\n\t\t// 2. Modify the system prompt as you want (your original logic)\n\t\tlet modifiedContent = systemContent;\n\t\tconst heading = \"## Other agents, assistants, or co-workers\";\n\t\tconst nextHeading = \"## Customer details\";\n\t\tif (systemContent) {\n\t\t\tconst headingIndex = systemContent.indexOf(heading);\n\t\t\tconst nextHeadingIndex = systemContent.indexOf(nextHeading);\n\t\t\tif (headingIndex !== -1 && nextHeadingIndex !== -1 && nextHeadingIndex > headingIndex) {\n\t\t\t\tconst before = systemContent.slice(0, headingIndex + heading.length);\n\t\t\t\tconst middle = `\\n${data[\"{{$23.result.choices.[0].message.content}}\"]}`; // <-- Replace if needed\n\t\t\t\tconst after = systemContent.slice(headingIndex + heading.length, systemContent.length);\n\t\t\t\tmodifiedContent = before + middle + after;\n\t\t\t}\n\t\t}\n\n\t\t// 3. Get the original model object from node 20 and parse it\n\t\tlet model = JSON.parse(data[\"{{$21.data.model}}\"]); // <-- Replace with your correct path\n\n\t\t// Debug: Log toolIds before update\n\t\tconsole.log(\"toolIds before update:\", model.toolIds);\n\n\t\t// 4. Update the messages array inside the model\n\t\tif (Array.isArray(model.messages)) {\n\t\t\tmodel.messages = model.messages.map(msg => {\n\t\t\t\tif (msg.role === \"system\") {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...msg,\n\t\t\t\t\t\tcontent: modifiedContent\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn msg;\n\t\t\t});\n\t\t} else {\n\t\t\tthrow new Error(\"model.messages is not an array\");\n\t\t}\n\n\t\t// Debug: Log toolIds after update\n\t\tconsole.log(\"toolIds after update:\", model.toolIds);\n\n\t\t// 5. Send PATCH request with the updated model object\n\t\tconst response = await axios.patch(\n\t\t\t`https://api.vapi.ai/assistant/${agentId}`,\n\t\t\t{ model },\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\t\"Authorization\": `Bearer ${data.api_key}`,\n\t\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\treturn {\n\t\t\tstatus: response.status,\n\t\t\tmodel // for debug\n\t\t};\n\t} catch (error) {\n\t\treturn {\n\t\t\terror: error.response ? error.response.data : error.message\n\t\t};\n\t}\n}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 2234,
        "y": -62
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "api_key",
            "title": "API Key",
            "type": "string",
            "required": false,
            "description": "Your API key for Vapi AI",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "code",
            "title": "",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": {
                "lang": "",
                "prefix": "",
                "suffix": "",
                "fetchOn": []
              },
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "683e0d1e69bc1858faccae8b",
      "title": "Generate interaction",
      "description": "",
      "localId": "23",
      "typeId": "668e5696f39d9d00ab2a75c4",
      "params": [
        {
          "key": "model",
          "type": "select",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [
              "o3-mini"
            ],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "user_prompt",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "Based on the following two personality profiles, generate a one to two sentence description about {{1.body.message.toolCalls.[0].function.arguments.name}} from the perspective of {{$21.agentName}} and how {{$21.agentName}} interacts with {{1.body.message.toolCalls.[0].function.arguments.name}} in an office setting. Do not include introductory phrases. Ensure the line starts with \"- {{1.body.message.toolCalls.[0].function.arguments.name}}\"\n\n---PERSONALITY PROFILE FOR {{$21.agentName}}---\n{{$21.systemPrompt}}\n\n---PERSONALITY PROFILE FOR {{1.body.message.toolCalls.[0].function.arguments.name}}---\n{{$10.result.choices.[0].message.content}}",
            "text": "Based on the following two personality profiles, generate a one to two sentence description about {{1.body.message.toolCalls.[0].function.arguments.name}} from the perspective of {{$21.agentName}} and how {{$21.agentName}} interacts with {{1.body.message.toolCalls.[0].function.arguments.name}} in an office setting. Do not include introductory phrases. Ensure the line starts with \"- {{1.body.message.toolCalls.[0].function.arguments.name}}\"\n\n---PERSONALITY PROFILE FOR {{$21.agentName}}---\n{{$21.systemPrompt}}\n\n---PERSONALITY PROFILE FOR {{1.body.message.toolCalls.[0].function.arguments.name}}---\n{{$10.result.choices.[0].message.content}}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "fileName",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "file",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "history",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "temperature",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "1.0",
            "text": "1.0",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "max_completion_tokens",
          "type": "int",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "n",
          "type": "int",
          "value": {
            "stringToString": [],
            "int": "1",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "stop",
          "type": "string_array",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "presence_penalty",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "0",
            "text": "0",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "frequency_penalty",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "0",
            "text": "0",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "reasoning_effort",
          "type": "select",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "store",
          "type": "bool",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "prediction",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "user",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "tools",
          "type": "string_array",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "tool_choice",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "top_p",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "1",
            "text": "1",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "logprobs",
          "type": "bool",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "top_logprobs",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "seed",
          "type": "int",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "response_format",
          "type": "select",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "schema_json",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "quick_preview_schema",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "{\"response\":\"result.choices[0].message.content\"}",
            "text": "{\"response\":\"result.choices[0].message.content\"}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 2062,
        "y": -61
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "model",
            "title": "Model",
            "type": "select",
            "required": false,
            "description": "By default, GPT o3 mini is selected. To find out which specific version is used for each model, [see the documentation](https://platform.openai.com/docs/models#current-model-aliases).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": {
                "options": [
                  {
                    "key": "o3-mini",
                    "value": "o3 Mini"
                  }
                ],
                "multiple": false,
                "fetchOn": [],
                "withLabel": false,
                "type": "",
                "pagination": {
                  "page": 0,
                  "context": "",
                  "supported": false
                },
                "query": {
                  "value": "",
                  "supported": false
                }
              },
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [
                "o3-mini"
              ],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "user_prompt",
            "title": "User Prompt",
            "type": "string",
            "required": false,
            "description": "Your new question prompt: please note that at least one of the \"User Prompt\", \"Dialogue History\" or \"File\" fields must be filled in",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "Hello ChatGPT, Let’s talk about this: {query}",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "fileName",
            "title": "File Name",
            "type": "string",
            "required": false,
            "description": "Select a file name in the data pop-up window, for example: 1.body.files.[0].filename, or specify your own file name with an extension, for example: image.png. Required if field \"File\" has a content. It may be a document, audio or photo file (audio supports only mp3 and wav formats).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "file",
            "title": "File",
            "type": "string",
            "required": false,
            "description": "Select a file content in the data pop-up window, for example: 1.body.files.[0].content, or pass the file URL,for example: https://file.png. It may be a document, audio or photo file (audio supports only mp3 and wav formats). Check [documentation](https://platform.openai.com/docs/models#current-model-aliases) to find out which file type is supported by this model.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "history",
            "title": "Dialogue History JSON",
            "type": "string",
            "required": false,
            "description": "Valid JSON containing [the array of objects](https://platform.openai.com/docs/api-reference/chat/create), e.g. [{\"role\":\"user\",\"content\":\"Hello!\"}, {\"role\": \"assistant\", \"content\": \"Hi there! How can I help you today?\"}]\n\n`role` can be one of (**the roles should alternate**):\n\n`system` - the message author role is system;\n\n`user` - the message author role is user;\n\n`assistant` - the message author role is assistant;\n\n`tool` - the message author role is tool;",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "temperature",
            "title": "Temperature",
            "type": "string",
            "required": false,
            "description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. We generally recommend altering this or \"Top P\" but not both.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "1.0",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "max_completion_tokens",
            "title": "Max Tokens",
            "type": "int",
            "required": false,
            "description": "An upper bound for the number of tokens that can be generated for a completion, including visible output tokens and [reasoning tokens](https://platform.openai.com/docs/guides/reasoning).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "n",
            "title": "Chat Completion Choices",
            "type": "int",
            "required": false,
            "description": "How many chat completion choices to generate for each input message",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "1",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "stop",
            "title": "Stop",
            "type": "string_array",
            "required": false,
            "description": "Up to 4 sequences where the API will stop generating further tokens",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "presence_penalty",
            "title": "Presence Penalty",
            "type": "string",
            "required": false,
            "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "0",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "frequency_penalty",
            "title": "Frequency Penalty",
            "type": "string",
            "required": false,
            "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "0",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "reasoning_effort",
            "title": "Reasoning Effort",
            "type": "select",
            "required": false,
            "description": "For o-series models only. Constrains effort on reasoning [for reasoning models](https://platform.openai.com/docs/api-reference/runs/createRun).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": {
                "options": [],
                "multiple": false,
                "fetchOn": [],
                "withLabel": false,
                "type": "",
                "pagination": {
                  "page": 0,
                  "context": "",
                  "supported": false
                },
                "query": {
                  "value": "",
                  "supported": false
                }
              },
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "store",
            "title": "Store",
            "type": "bool",
            "required": false,
            "description": "Whether or not to store the output of this chat completion request for use in our [model distillation](https://platform.openai.com/docs/guides/distillation) or [evals](https://platform.openai.com/docs/guides/evals) products",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "prediction",
            "title": "Prediction",
            "type": "string",
            "required": false,
            "description": "Enter correct JSON, for example: `{\"type: \"content\", \"content\": \"some prediction\"}`, [see documentation](https://platform.openai.com/docs/api-reference/chat/create)",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "user",
            "title": "User",
            "type": "string",
            "required": false,
            "description": "A unique identifier representing your end-user, which can help Azure OpenAI to monitor and detect abuse",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "tools",
            "title": "Tools JSON",
            "type": "string_array",
            "required": false,
            "description": "Currently, only functions are supported as a tool. Accept JSON, e.g. `{\"type\": \"function\", \"function\": { \"name\": \"get_rain_probability\", \"description\": \"Get the probability of rain for a specific location\", \"parameters\": { \"type\": \"object\", \"properties\": { \"location\": { \"type\": \"string\", \"description\": \"The city and state, e.g., San Francisco, CA\" } }, \"required\": [\"location\"] } } }`. [More info](https://platform.openai.com/docs/api-reference/chat/create#chat-create-tools).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "tool_choice",
            "title": "Tool Choice JSON",
            "type": "string",
            "required": false,
            "description": "Controls which (if any) tool is called by the model. `none` means the model will not call any tool and instead generates a message. `auto` means the model can pick between generating a message or calling one or more tools. `required` means the model must call one or more tools. Specifying a particular tool via `{\"type\": \"function\", \"function\": {\"name\": \"get_rain_probability\"}}` forces the model to call that tool.\n\n`none` is the default when no tools are present. `auto` is the default if tools are present. *Format: JSON object.* [More info](https://platform.openai.com/docs/api-reference/chat/create#chat-create-tool_choice).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "top_p",
            "title": "Top P",
            "type": "string",
            "required": false,
            "description": "Number between 0 and 1. An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with \"Top P\" probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered. We generally recommend altering this or \"Temperature\" but not both.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "1",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "logprobs",
            "title": "Log Probs",
            "type": "bool",
            "required": false,
            "description": "Whether to return log probabilities of the output tokens or not. If `true`, returns the log probabilities of each output token returned in the `content` of `message`.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "top_logprobs",
            "title": "Top Log Probs",
            "type": "string",
            "required": false,
            "description": "An integer between 0 and 5 specifying the number of most likely tokens to return at each token position, each with an associated log probability. \"Logprobs\" must be set to `true` if this parameter is used.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "seed",
            "title": "Seed",
            "type": "int",
            "required": false,
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "response_format",
            "title": "Response Format",
            "type": "select",
            "required": false,
            "description": "An object specifying the format that the model must output. To enable JSON mode, also mention it in the prompt. Example: 'Make a list in JSON format'.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": {
                "options": [],
                "multiple": false,
                "fetchOn": [],
                "withLabel": false,
                "type": "",
                "pagination": {
                  "page": 0,
                  "context": "",
                  "supported": false
                },
                "query": {
                  "value": "",
                  "supported": false
                }
              },
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "schema_json",
            "title": "Response Format Schema JSON",
            "type": "string",
            "required": false,
            "description": "Required when \"Parsed JSON Schema\" or \"JSON Schema\" is selected in the format, otherwise this property is not used. Set your own schema, e.g. `{\"type\": \"json_schema\", \"json_schema\": { \"name\": \"myName\", \"schema\":  { \"type\": \"object\", \"properties\": { \"news\": { \"type\": \"string\" } },\"required\": [\"news\"], \"additionalProperties\": false }, \"name\": \"additionalProperties\"} }`, [see more info](https://platform.openai.com/docs/api-reference/responses/create#responses-create-text)",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": {
          "environment": "",
          "isPd": true,
          "isJsn": true,
          "pdAvailableGetLastRecords": false
        },
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "683e7e0130380c219b1d9a58",
      "title": "Store Created Assistant Personality",
      "description": "",
      "localId": "25",
      "typeId": "66bf657a22e621de86cbee7b",
      "params": [
        {
          "key": "storage_name",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "6d16c0c4-2139-45f6-a400-6f17e29229bb",
            "text": "6d16c0c4-2139-45f6-a400-6f17e29229bb",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "collection_name",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "assistant_personality",
            "text": "assistant_personality",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "object",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "{\"name\": \"{{1.body.message.toolCalls.[0].function.arguments.name}}\", \"traits\": {{28.traits}}}",
            "text": "{\"name\": \"{{1.body.message.toolCalls.[0].function.arguments.name}}\", \"traits\": {{28.traits}}}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 1632,
        "y": 59
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "storage_name",
            "title": "Storage ID",
            "type": "text",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "collection_name",
            "title": "Collection name",
            "type": "text",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "object",
            "title": "Object",
            "type": "text",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "683e7f3b11443f16554e1319",
      "title": "Get personality trait keywords",
      "description": "",
      "localId": "27",
      "typeId": "668e5696f39d9d00ab2a75c4",
      "params": [
        {
          "key": "model",
          "type": "select",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [
              "gpt-4.1-mini"
            ],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "user_prompt",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "Based on the following identity, list keywords that describe this person. Return the result in a JSON object with a traits array. Do not include introductory phrases. Return only the JSON object like {\"traits\": []}\n\n{{$10.result.choices.[0].message.content}}",
            "text": "Based on the following identity, list keywords that describe this person. Return the result in a JSON object with a traits array. Do not include introductory phrases. Return only the JSON object like {\"traits\": []}\n\n{{$10.result.choices.[0].message.content}}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "fileName",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "file",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "history",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "temperature",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "1.0",
            "text": "1.0",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "max_completion_tokens",
          "type": "int",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "n",
          "type": "int",
          "value": {
            "stringToString": [],
            "int": "1",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "stop",
          "type": "string_array",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "presence_penalty",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "0",
            "text": "0",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "frequency_penalty",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "0",
            "text": "0",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "reasoning_effort",
          "type": "select",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "store",
          "type": "bool",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "prediction",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "user",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "tools",
          "type": "string_array",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "tool_choice",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "top_p",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "1",
            "text": "1",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "logprobs",
          "type": "bool",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "top_logprobs",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "seed",
          "type": "int",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "response_format",
          "type": "select",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "schema_json",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "quick_preview_schema",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "{\"response\":\"result.choices[0].message.content\"}",
            "text": "{\"response\":\"result.choices[0].message.content\"}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 1258,
        "y": 68
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "model",
            "title": "Model",
            "type": "select",
            "required": false,
            "description": "By default, GPT o3 mini is selected. To find out which specific version is used for each model, [see the documentation](https://platform.openai.com/docs/models#current-model-aliases).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": {
                "options": [
                  {
                    "key": "gpt-4.1-mini",
                    "value": "GPT 4.1 Mini"
                  }
                ],
                "multiple": false,
                "fetchOn": [],
                "withLabel": false,
                "type": "",
                "pagination": {
                  "page": 0,
                  "context": "",
                  "supported": false
                },
                "query": {
                  "value": "",
                  "supported": false
                }
              },
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [
                "o3-mini"
              ],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "user_prompt",
            "title": "User Prompt",
            "type": "string",
            "required": false,
            "description": "Your new question prompt: please note that at least one of the \"User Prompt\", \"Dialogue History\" or \"File\" fields must be filled in",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "Hello ChatGPT, Let’s talk about this: {query}",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "fileName",
            "title": "File Name",
            "type": "string",
            "required": false,
            "description": "Select a file name in the data pop-up window, for example: 1.body.files.[0].filename, or specify your own file name with an extension, for example: image.png. Required if field \"File\" has a content. It may be a document, audio or photo file (audio supports only mp3 and wav formats).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "file",
            "title": "File",
            "type": "string",
            "required": false,
            "description": "Select a file content in the data pop-up window, for example: 1.body.files.[0].content, or pass the file URL,for example: https://file.png. It may be a document, audio or photo file (audio supports only mp3 and wav formats). Check [documentation](https://platform.openai.com/docs/models#current-model-aliases) to find out which file type is supported by this model.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "history",
            "title": "Dialogue History JSON",
            "type": "string",
            "required": false,
            "description": "Valid JSON containing [the array of objects](https://platform.openai.com/docs/api-reference/chat/create), e.g. [{\"role\":\"user\",\"content\":\"Hello!\"}, {\"role\": \"assistant\", \"content\": \"Hi there! How can I help you today?\"}]\n\n`role` can be one of (**the roles should alternate**):\n\n`system` - the message author role is system;\n\n`user` - the message author role is user;\n\n`assistant` - the message author role is assistant;\n\n`tool` - the message author role is tool;",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "temperature",
            "title": "Temperature",
            "type": "string",
            "required": false,
            "description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. We generally recommend altering this or \"Top P\" but not both.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "1.0",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "max_completion_tokens",
            "title": "Max Tokens",
            "type": "int",
            "required": false,
            "description": "An upper bound for the number of tokens that can be generated for a completion, including visible output tokens and [reasoning tokens](https://platform.openai.com/docs/guides/reasoning).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "n",
            "title": "Chat Completion Choices",
            "type": "int",
            "required": false,
            "description": "How many chat completion choices to generate for each input message",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "1",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "stop",
            "title": "Stop",
            "type": "string_array",
            "required": false,
            "description": "Up to 4 sequences where the API will stop generating further tokens",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "presence_penalty",
            "title": "Presence Penalty",
            "type": "string",
            "required": false,
            "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "0",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "frequency_penalty",
            "title": "Frequency Penalty",
            "type": "string",
            "required": false,
            "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "0",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "reasoning_effort",
            "title": "Reasoning Effort",
            "type": "select",
            "required": false,
            "description": "For o-series models only. Constrains effort on reasoning [for reasoning models](https://platform.openai.com/docs/api-reference/runs/createRun).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": {
                "options": [],
                "multiple": false,
                "fetchOn": [],
                "withLabel": false,
                "type": "",
                "pagination": {
                  "page": 0,
                  "context": "",
                  "supported": false
                },
                "query": {
                  "value": "",
                  "supported": false
                }
              },
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "store",
            "title": "Store",
            "type": "bool",
            "required": false,
            "description": "Whether or not to store the output of this chat completion request for use in our [model distillation](https://platform.openai.com/docs/guides/distillation) or [evals](https://platform.openai.com/docs/guides/evals) products",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "prediction",
            "title": "Prediction",
            "type": "string",
            "required": false,
            "description": "Enter correct JSON, for example: `{\"type: \"content\", \"content\": \"some prediction\"}`, [see documentation](https://platform.openai.com/docs/api-reference/chat/create)",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "user",
            "title": "User",
            "type": "string",
            "required": false,
            "description": "A unique identifier representing your end-user, which can help Azure OpenAI to monitor and detect abuse",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "tools",
            "title": "Tools JSON",
            "type": "string_array",
            "required": false,
            "description": "Currently, only functions are supported as a tool. Accept JSON, e.g. `{\"type\": \"function\", \"function\": { \"name\": \"get_rain_probability\", \"description\": \"Get the probability of rain for a specific location\", \"parameters\": { \"type\": \"object\", \"properties\": { \"location\": { \"type\": \"string\", \"description\": \"The city and state, e.g., San Francisco, CA\" } }, \"required\": [\"location\"] } } }`. [More info](https://platform.openai.com/docs/api-reference/chat/create#chat-create-tools).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "tool_choice",
            "title": "Tool Choice JSON",
            "type": "string",
            "required": false,
            "description": "Controls which (if any) tool is called by the model. `none` means the model will not call any tool and instead generates a message. `auto` means the model can pick between generating a message or calling one or more tools. `required` means the model must call one or more tools. Specifying a particular tool via `{\"type\": \"function\", \"function\": {\"name\": \"get_rain_probability\"}}` forces the model to call that tool.\n\n`none` is the default when no tools are present. `auto` is the default if tools are present. *Format: JSON object.* [More info](https://platform.openai.com/docs/api-reference/chat/create#chat-create-tool_choice).",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "top_p",
            "title": "Top P",
            "type": "string",
            "required": false,
            "description": "Number between 0 and 1. An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with \"Top P\" probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered. We generally recommend altering this or \"Temperature\" but not both.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "1",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "logprobs",
            "title": "Log Probs",
            "type": "bool",
            "required": false,
            "description": "Whether to return log probabilities of the output tokens or not. If `true`, returns the log probabilities of each output token returned in the `content` of `message`.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "top_logprobs",
            "title": "Top Log Probs",
            "type": "string",
            "required": false,
            "description": "An integer between 0 and 5 specifying the number of most likely tokens to return at each token position, each with an associated log probability. \"Logprobs\" must be set to `true` if this parameter is used.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "seed",
            "title": "Seed",
            "type": "int",
            "required": false,
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "response_format",
            "title": "Response Format",
            "type": "select",
            "required": false,
            "description": "An object specifying the format that the model must output. To enable JSON mode, also mention it in the prompt. Example: 'Make a list in JSON format'.",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": {
                "options": [],
                "multiple": false,
                "fetchOn": [],
                "withLabel": false,
                "type": "",
                "pagination": {
                  "page": 0,
                  "context": "",
                  "supported": false
                },
                "query": {
                  "value": "",
                  "supported": false
                }
              },
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "schema_json",
            "title": "Response Format Schema JSON",
            "type": "string",
            "required": false,
            "description": "Required when \"Parsed JSON Schema\" or \"JSON Schema\" is selected in the format, otherwise this property is not used. Set your own schema, e.g. `{\"type\": \"json_schema\", \"json_schema\": { \"name\": \"myName\", \"schema\":  { \"type\": \"object\", \"properties\": { \"news\": { \"type\": \"string\" } },\"required\": [\"news\"], \"additionalProperties\": false }, \"name\": \"additionalProperties\"} }`, [see more info](https://platform.openai.com/docs/api-reference/responses/create#responses-create-text)",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": {
          "environment": "",
          "isPd": true,
          "isJsn": true,
          "pdAvailableGetLastRecords": false
        },
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "683e811a44399e34943bdb9d",
      "title": "Extract JSON traits",
      "description": "",
      "localId": "28",
      "typeId": "62cc22317ae28c026d256930",
      "params": [
        {
          "key": "code",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "function extractJson(markdown) {\n\tif (typeof markdown !== 'string') throw new Error('Input is not a string.');\n\tconst jsonCodeBlockRegex = /```json\\s*([\\s\\S]*?)```/i;\n\tconst match = markdown.match(jsonCodeBlockRegex);\n\tlet jsonString = match ? match[1] : markdown.trim();\n\tlet obj;\n\ttry {\n\t\tobj = JSON.parse(jsonString);\n\t} catch (e) {\n\t\tthrow new Error('Failed to parse JSON: ' + e.message);\n\t}\n\treturn obj;\n}\n\nexport default async function run({ execution_id, input, data, store, db }) {\n\tconst aiResponse = data[\"{{$27.result.choices.[0].message.content}}\"];\n\tlet jsonResult;\n\ttry{\n\t\tjsonResult = extractJson(aiResponse);\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n\treturn jsonResult\n}",
            "text": "function extractJson(markdown) {\n\tif (typeof markdown !== 'string') throw new Error('Input is not a string.');\n\tconst jsonCodeBlockRegex = /```json\\s*([\\s\\S]*?)```/i;\n\tconst match = markdown.match(jsonCodeBlockRegex);\n\tlet jsonString = match ? match[1] : markdown.trim();\n\tlet obj;\n\ttry {\n\t\tobj = JSON.parse(jsonString);\n\t} catch (e) {\n\t\tthrow new Error('Failed to parse JSON: ' + e.message);\n\t}\n\treturn obj;\n}\n\nexport default async function run({ execution_id, input, data, store, db }) {\n\tconst aiResponse = data[\"{{$27.result.choices.[0].message.content}}\"];\n\tlet jsonResult;\n\ttry{\n\t\tjsonResult = extractJson(aiResponse);\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n\treturn jsonResult\n}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 1440,
        "y": 66
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "code",
            "title": "",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": {
                "lang": "",
                "prefix": "",
                "suffix": "",
                "fetchOn": []
              },
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "683e81cb11443f16554e1355",
      "title": "Get personality keywords of all agents",
      "description": "",
      "localId": "29",
      "typeId": "66bf657a22e621de86cbee7c",
      "params": [
        {
          "key": "storage_name",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "6d16c0c4-2139-45f6-a400-6f17e29229bb",
            "text": "6d16c0c4-2139-45f6-a400-6f17e29229bb",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "collection_name",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "assistant_personality",
            "text": "assistant_personality",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "filter",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "limit",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "offset",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": -61,
        "y": 167
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "storage_name",
            "title": "Storage ID",
            "type": "text",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "collection_name",
            "title": "Collection name",
            "type": "text",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "filter",
            "title": "Filter",
            "type": "text",
            "required": false,
            "description": "Filter in YAML format. For details see [documentation](https://docs.latenode.com/docs/4eb52adf-0357-46a9-b85d-872b79ced50e/)",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "limit",
            "title": "Limit",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "offset",
            "title": "Offset",
            "type": "text",
            "required": false,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    },
    {
      "id": "683e86d830380c219b1d9af8",
      "title": "",
      "description": "",
      "localId": "35",
      "typeId": "66f444735e843b54d9156916",
      "params": [
        {
          "key": "storage_name",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "6d16c0c4-2139-45f6-a400-6f17e29229bb",
            "text": "6d16c0c4-2139-45f6-a400-6f17e29229bb",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "collection_name",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "generated_assistants",
            "text": "generated_assistants",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "object_id",
          "type": "string",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "{{20.value.object_id}}",
            "text": "{{20.value.object_id}}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "object_value",
          "type": "text",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "{{21.data}}",
            "text": "{{21.data}}",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": false,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        },
        {
          "key": "replace",
          "type": "bool",
          "value": {
            "stringToString": [],
            "int": "0",
            "string": "",
            "text": "",
            "select": [],
            "constructorParams": [],
            "custom": "",
            "stringArray": [],
            "bool": true,
            "multiselect": [],
            "connection": "",
            "stringToAny": []
          }
        }
      ],
      "coords": {
        "x": 2061,
        "y": 67
      },
      "calculatedNodeType": {
        "id": "",
        "name": "",
        "alias": "",
        "description": "",
        "descriptionAttention": "",
        "params": [
          {
            "key": "storage_name",
            "title": "Storage ID",
            "type": "text",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "collection_name",
            "title": "Collection name",
            "type": "text",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "object_id",
            "title": "Object ID",
            "type": "string",
            "required": true,
            "description": "",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "object_value",
            "title": "Value",
            "type": "text",
            "required": true,
            "description": "Object fields values in JSON format. Ex. `{\"a\":\"b\",\"c\":[1,2,3]}`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "replace",
            "title": "Replace whole object",
            "type": "bool",
            "required": false,
            "description": "If this flag enabled whole object value will be replaced, otherwise only specified fields will be updated",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": true,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          },
          {
            "key": "quick_preview_schema",
            "title": "Quick Preview Schema",
            "type": "string",
            "required": false,
            "description": "This field lets you format response data for easy reading. Define key-path pairs in JSON, where the key is the header and the value is the data path.\nExample: `{ \"Name\": \"result.user.name\", \"Email\": \"result.contact.email\" }`",
            "options": {
              "string": null,
              "int": null,
              "text": null,
              "stringToString": null,
              "select": null,
              "stringArray": null,
              "bool": null,
              "connection": null,
              "stringToAny": null
            },
            "default": {
              "stringToString": [],
              "int": "0",
              "string": "",
              "text": "",
              "select": [],
              "constructorParams": [],
              "custom": "",
              "stringArray": [],
              "bool": false,
              "multiselect": [],
              "connection": "",
              "stringToAny": []
            },
            "optional": false
          }
        ],
        "systemInfo": null,
        "icon": null,
        "purposes": [],
        "isPublic": false,
        "billing": null
      }
    }
  ],
  "gateways": [
    {
      "nodeId": "683be79327d1709e9f1ad3c2",
      "localNodeId": "",
      "routes": [
        {
          "condition": {
            "type": "",
            "expression": {
              "value": ""
            }
          },
          "label": "",
          "nodeId": "683beccf4f57a37c789240f5",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        },
        {
          "condition": {
            "type": "",
            "expression": {
              "value": ""
            }
          },
          "label": "",
          "nodeId": "683d2805ffe5d69f609cd507",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        },
        {
          "condition": {
            "type": "",
            "expression": {
              "value": ""
            }
          },
          "label": "",
          "nodeId": "683d9fe430380c219b1d90d3",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        }
      ],
      "name": "",
      "purpose": "output"
    },
    {
      "nodeId": "683beccf4f57a37c789240f5",
      "localNodeId": "",
      "routes": [
        {
          "condition": {
            "type": "",
            "expression": {
              "value": ""
            }
          },
          "label": "",
          "nodeId": "683d268a27d1709e9f1adac2",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        }
      ],
      "name": "",
      "purpose": "output"
    },
    {
      "nodeId": "683d268a27d1709e9f1adac2",
      "localNodeId": "",
      "routes": [
        {
          "condition": {
            "type": "",
            "expression": {
              "value": ""
            }
          },
          "label": "",
          "nodeId": "683be118cc9ed75e19ff8747",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        }
      ],
      "name": "",
      "purpose": "output"
    },
    {
      "nodeId": "683d2805ffe5d69f609cd507",
      "localNodeId": "",
      "routes": [
        {
          "condition": {
            "type": "",
            "expression": {
              "value": ""
            }
          },
          "label": "",
          "nodeId": "683d268a27d1709e9f1adac2",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        }
      ],
      "name": "",
      "purpose": "output"
    },
    {
      "nodeId": "683be118cc9ed75e19ff8747",
      "localNodeId": "",
      "routes": [
        {
          "condition": {
            "type": "",
            "expression": {
              "value": "{{startsWith(4.status;2)}}"
            }
          },
          "label": "2xx status",
          "nodeId": "683d9ea669bc1858facca6e8",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        }
      ],
      "name": "",
      "purpose": "output"
    },
    {
      "nodeId": "683d9fe430380c219b1d90d3",
      "localNodeId": "",
      "routes": [
        {
          "condition": {
            "type": "",
            "expression": {
              "value": ""
            }
          },
          "label": "",
          "nodeId": "683d268a27d1709e9f1adac2",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        }
      ],
      "name": "",
      "purpose": "output"
    },
    {
      "nodeId": "683be118cc9ed75e19ff8745",
      "localNodeId": "",
      "routes": [
        {
          "condition": {
            "type": "",
            "expression": {
              "value": "{{not(empty(1.body.message.toolCalls.[0].function.arguments.name))}}"
            }
          },
          "label": "agent has name",
          "nodeId": "683dcdfa30380c219b1d94c0",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        },
        {
          "condition": {
            "type": "",
            "expression": {
              "value": ""
            }
          },
          "label": "no name",
          "nodeId": "683dceb630380c219b1d94da",
          "localNodeId": "",
          "isFallback": true,
          "purpose": "input"
        }
      ],
      "name": "",
      "purpose": "output"
    },
    {
      "nodeId": "683dcdfa30380c219b1d94c0",
      "localNodeId": "",
      "routes": [
        {
          "condition": {
            "type": "",
            "expression": {
              "value": "{{empty(16.result)}}"
            }
          },
          "label": "agent with name does not exist",
          "nodeId": "683be118cc9ed75e19ff8746",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        },
        {
          "condition": {
            "type": "",
            "expression": {
              "value": ""
            }
          },
          "label": "duplicate named agents not allowed",
          "nodeId": "683dcf2f11443f16554e0ea1",
          "localNodeId": "",
          "isFallback": true,
          "purpose": "input"
        },
        {
          "condition": {
            "type": "",
            "expression": {
              "value": "{{empty(16.result)}}"
            }
          },
          "label": "agent with name does not exist",
          "nodeId": "683de79769bc1858faccac50",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        }
      ],
      "name": "",
      "purpose": "output"
    },
    {
      "nodeId": "683de7f769bc1858faccac62",
      "localNodeId": "",
      "routes": [
        {
          "condition": {
            "type": "",
            "expression": {
              "value": ""
            }
          },
          "label": "",
          "nodeId": "683de7f769bc1858faccac63",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        }
      ],
      "name": "",
      "purpose": "cycle"
    },
    {
      "nodeId": "683de7f769bc1858faccac63",
      "localNodeId": "",
      "routes": [
        {
          "condition": {
            "type": "",
            "expression": {
              "value": ""
            }
          },
          "label": "",
          "nodeId": "683e0d1e69bc1858faccae8b",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        },
        {
          "condition": {
            "type": "",
            "expression": {
              "value": ""
            }
          },
          "label": "",
          "nodeId": "683e86d830380c219b1d9af8",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        }
      ],
      "name": "",
      "purpose": "output"
    },
    {
      "nodeId": "683e0d1e69bc1858faccae8b",
      "localNodeId": "",
      "routes": [
        {
          "condition": {
            "type": "",
            "expression": {
              "value": ""
            }
          },
          "label": "",
          "nodeId": "683e0c597e1eb9e538d0caf6",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        }
      ],
      "name": "",
      "purpose": "output"
    },
    {
      "nodeId": "683e7e0130380c219b1d9a58",
      "localNodeId": "",
      "routes": [
        {
          "condition": {
            "type": "",
            "expression": {
              "value": ""
            }
          },
          "label": "",
          "nodeId": "683de7f769bc1858faccac62",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        }
      ],
      "name": "",
      "purpose": "output"
    },
    {
      "nodeId": "683d9ea669bc1858facca6e8",
      "localNodeId": "",
      "routes": [
        {
          "condition": {
            "type": "",
            "expression": {
              "value": ""
            }
          },
          "label": "",
          "nodeId": "683e7f3b11443f16554e1319",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        }
      ],
      "name": "",
      "purpose": "output"
    },
    {
      "nodeId": "683e7f3b11443f16554e1319",
      "localNodeId": "",
      "routes": [
        {
          "condition": {
            "type": "",
            "expression": {
              "value": ""
            }
          },
          "label": "",
          "nodeId": "683e811a44399e34943bdb9d",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        }
      ],
      "name": "",
      "purpose": "output"
    },
    {
      "nodeId": "683e811a44399e34943bdb9d",
      "localNodeId": "",
      "routes": [
        {
          "condition": {
            "type": "",
            "expression": {
              "value": ""
            }
          },
          "label": "",
          "nodeId": "683e7e0130380c219b1d9a58",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        }
      ],
      "name": "",
      "purpose": "output"
    },
    {
      "nodeId": "683de79769bc1858faccac50",
      "localNodeId": "",
      "routes": [
        {
          "condition": {
            "type": "",
            "expression": {
              "value": ""
            }
          },
          "label": "",
          "nodeId": "683e81cb11443f16554e1355",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        }
      ],
      "name": "",
      "purpose": "output"
    },
    {
      "nodeId": "683e81cb11443f16554e1355",
      "localNodeId": "",
      "routes": [
        {
          "condition": {
            "type": "",
            "expression": {
              "value": ""
            }
          },
          "label": "",
          "nodeId": "683be79327d1709e9f1ad3c2",
          "localNodeId": "",
          "isFallback": false,
          "purpose": "input"
        }
      ],
      "name": "",
      "purpose": "output"
    }
  ],
  "version": "126",
  "tags": [],
  "release": true,
  "latestLocalNodeId": "36",
  "environments": [
    {
      "id": "683bdec9d7a848642232fd65",
      "alias": "prod",
      "name": "Prod",
      "actualVersion": "126",
      "isActive": true
    },
    {
      "id": "683bdec9d7a848642232fd66",
      "alias": "dev",
      "name": "Dev",
      "actualVersion": "126",
      "isActive": true
    }
  ],
  "nodulInfo": {
    "isNodul": false,
    "isPublic": false,
    "isCodul": false
  },
  "readOnly": false,
  "executionBucket": "execution_bucket_default",
  "isUsersPublic": false
}
